{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                  Multi Routines
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindBitmapAndDtm(out X, Y: Integer; Bmp: TSCARBitmap; DTM: Integer; PrefDTM: Boolean): Integer;
Contributors: LordJashin
Date Created: November 8th, 2012. By LordJashin.
Last Modified: November 8th, 2012. By LordJashin.
Explanation: If PrefDTM is set to TRUE, then X, Y will always be set as where the DTM was found (if it was found)
             regardless of whether bmp was found or not. So by default Bitmaps are preferred and here's how:
             Result of 0: Nothing found...
                       1: Bmp & DTM found, DTM found inside of where Bmp is, X, Y = Where Bmp was found
                       2: Bmp & DTM found, DTM not found inside of where Bmp is, X, Y = Where Bmp was found
                       3: Bmp found, but DTM not found, X, Y = Where Bmp was found
                       4: DTM found, but Bmp not found, X, Y = Where DTM was found 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindBitmapAndDtm(out X, Y: Integer; Bmp: TSCARBitmap; DTM: Integer; PrefDTM: Boolean): Integer;
var
  P1, P2: TPoint;   
  CBox: TBox;
begin
  Result := 0;
  CBox := GetClient.ImageArea;                                                
  if FindBitmap(P1.X, P1.Y, Bmp, 0, 0, CBox.X2, CBox.Y2) then 
  begin
    if FindDTM(DTM, P2.X, P2.Y, 0, 0, CBox.X2, CBox.Y2) then
    begin             
      if PointInBox(P2, Box(P1.X, P1.Y, P1.X + Bmp.Width, P1.Y + Bmp.Height)) then
        Result := 1                        
      else                
        Result := 2;
    end
    else        
      Result := 3;      
  end             
  else
    begin
      if FindDTM(DTM, P2.X, P2.Y, 0, 0, CBox.X2, CBox.Y2) then
        Result := 4;    
    end;                            
  if PrefDTM then
    case Result of
      1, 2, 4: PointToCoord(P2, X, Y);
      3: PointToCoord(P1, X, Y);
    end
  else
    case Result of
      1, 2, 3: PointToCoord(P1, X, Y);
      4: PointToCoord(P2, X, Y);
    end;                              
end; 

