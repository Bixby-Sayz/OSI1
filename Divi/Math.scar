{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                  Math Routines
--------------------------------------------------------------------------------
 * function RR(Min, Max: Integer): Integer;
     By: Wanted
 * function RRectanglePoint(X1, Y1, X2, Y2: Integer): TPoint;
     By: Wanted
 * function RCirclePoint(CX, CY, Radius: Integer): TPoint;
     By: Wanted & Zyt3x.
 * function AngleBetweenPointsDegress(P1, P2: TPoint): Extended;
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function RR(Min, Max: Integer): Integer;
Contributors: Freddy, Wanted.
Description: Outputs a value within a range.
Date Created: September 22nd, 2011. By Wanted
Last Modification: September 22nd, 2011. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function RR(Min, Max: Integer): Integer;
begin
  {$IFDEF NoVariance}
    Result := RandomRange(Min, Max);
  {$ELSE}
    Result := RandomRangeG(Min, Max, OSI_Variance);
  {$ENDIF}
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function RRectanglePoint(X1, Y1, X2, Y2: Integer): TPoint;
Contributors: Freddy, Wanted.
Description: Outputs a random point within a rectangle.
Date Created: September 18th, 2011. By Wanted
Last Modification: September 27th, 2011. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function RRectanglePoint(X1, Y1, X2, Y2: Integer): TPoint;
begin
  {$IFDEF NoVariance}
    Result := RndBoxPoint(Box(X1, Y1, X2, Y2));
  {$ELSE}
    Result := RndBoxPointG(Box(X1, Y1, X2, Y2), OSI_Variance);
  {$ENDIF}
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function RCirclePoint(CX, CY, Radius: Integer): TPoint;
Contributors: Freddy, Wanted, Zyt3x.
Description: Outputs a random point within a circle.
Date Created: September 4th, 2011. By Wanted & Zyt3x.
Last Modification: September 22nd, 2011. By Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function RCirclePoint(CX, CY, Radius: Integer): TPoint;
begin
  {$IFDEF NoVariance}
    Result := RndCirclePoint(CX, CY, Radius);
  {$ELSE}
    Result := RndCirclePointG(CX, CY, Radius, OSI_Variance);
  {$ENDIF}
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function AngleBetweenPointsExDegress(P1, P2: TPoint): Extended;
Contributors: Wanted
Description: Calculates the relative angle between two points in degrees.
Date Created: October 28th, 2011. By Wanted. RS2 Build 669.
Last Modification: October 28th, 2011. By Wanted. RS2 Build 669.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function AngleBetweenPointsExDegress(P1, P2: TPoint): Extended;
begin
  Result := Degrees(ArcTan2(P1.Y - P2.Y, P1.X - P2.X));
  {$IFDEF RS2}
    Result := Result + 90.0;
  {$ENDIF}
end;

//InAbstractBox
//GroupDigits (123456778 -> 123,456,778
//Numbers to words 1000000 -> one million