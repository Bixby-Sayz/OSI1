{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                Logging Routines
--------------------------------------------------------------------------------
 * procedure OSI_SetupAutoLog(FolderPath, FileType, NewFolder, LogName: string);
 * procedure OSI_SetupAutoScreenSave(FolderPath, SaveName, NewFolder: string; ClientOnly: Boolean);
 * function  OSI_AutoSaveScreen: Boolean;
 * procedure OSI_AddToLog(s: string);
 * procedure OSI_WriteAndLog(s: string);
 * procedure OSI_ClearLog;
 * procedure OSI_WriteLog;
 * function  OSI_SaveLog(Path: string): Boolean;
 * function  OSI_AutoSaveLog: Boolean; 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_SetupAutoLog(FolderPath, FileType, NewFolder, LogName: string);
Contributors: LordJashin
Description: Will setup the OSILog variable for you with regards to auto logging
Date Created: October 16th, 2012. By LordJashin.
Last Modified: October 21st, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_SetupAutoLog(FolderPath, FileType, NewFolder, LogName: string);
begin
  OSILog.AutoLog := True;               
  OSILog.AutoLogName := LogName;
  OSILog.AutoLogFolderPath := FolderPath;              
  OSILog.AutoLogFileType := FileType;
  OSILog.AutoLogNewFolder := NewFolder;    
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_SetupAutoScreenSave(FolderPath, SaveName, NewFolder: string; ClientOnly: Boolean);
Contributors: LordJashin
Description: Will setup the OSILog variable for you with regards to autoscreen saving
Date Created: October 21st, 2012. By LordJashin.
Last Modified: October 21st, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_SetupAutoScreenSave(FolderPath, SaveName, NewFolder: string; ClientOnly: Boolean);
begin
  OSILog.AutoScreen := True;  
  OSILog.AutoScreenFolderPath := FolderPath;
  OSILog.AutoScreenName := SaveName;
  OSILog.AutoScreenNewFolder := NewFolder;       
  OSILog.AutoScreenClientOnly := ClientOnly;  
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OSI_AutoSaveScreen: Boolean;
Contributors: LordJashin
Description: Will automatically take a screenshot and save it for you using OSILog vars
Date Created: October 21st, 2012. By LordJashin.
Last Modified: October 21st, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OSI_AutoSaveScreen: Boolean;
var
  Screen: TSCARBitmap;
  Desktop: TSCARWindowClient;         
  SavePath, NewPath, T: string;  
  i: Integer;
begin
  Result := False;     
  if not OSILog.AutoScreen then Exit;
  try
    Screen := TSCARBitmap.Create('');
    Desktop := TSCARWindowClient.Create(GetDesktopWindow);
    if (OSILog.AutoScreenNewFolder <> '') then
      ForceDirectories(OSILog.AutoScreenFolderPath + OSILog.AutoScreenNewFolder + '\');
    T := TheTime;
    while StrContains(':', T) do
      T := Replace(T, ':', '-');
    if (OSILog.AutoScreenNewFolder <> '') then
      if DirectoryExists(OSILog.AutoScreenFolderPath + OSILog.AutoScreenNewFolder + '\') then
        SavePath := OSILog.AutoScreenNewFolder + '\' + TheDate(1) + ' ' + T + ' ' + OSILog.AutoScreenName + ' - ';
    if (OSILog.AutoScreenNewFolder = '') then
      SavePath := TheDate(1) + ' ' + T + ' ' + OSILog.AutoScreenName + ' - ';
    if OSILog.AutoScreenClientOnly then
      Screen := GetClient.Capture
    else
      Screen := Desktop.Capture;
    NewPath := SavePath;
    while FileExists(OSILog.AutoScreenFolderPath + SavePath + '.png') do
      begin
        i := i + 1;
        SavePath := NewPath + IntToStr(i);
      end;
    Screen.SaveToPng(OSILog.AutoScreenFolderPath + SavePath + '.png');
  except
    SetLength(OSILog.Log, Length(OSILog.Log) + 1);                                                         
    WriteLn('OSI: Failed to save screenshot As: ' + OSILog.AutoScreenFolderPath + SavePath + '.png');
    OSILog.Log[High(OSILog.Log)] := 'OSI: Failed to save screenshot As: ' + OSILog.AutoScreenFolderPath + SavePath + '.png';
  finally                                
    Result := True;
    Screen.Free;
    Desktop.Free;  
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_AddToLog(s: string);
Contributors: LordJashin
Description: Adds the string to OSILog log's TStrArray, only no writeln used, try block
             puts 'OSI: ' in front of every line.
Date Created: October 16th, 2012. By LordJashin.
Last Modified: October 21st, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_AddToLog(s: string);
var
  i, L: Integer;
  TSA: TStrArray;
begin
  if (s = '') then Exit;
  try            
    L := Length(OSILog.Log);
    TSA := StrExplodeMulti([#13#10, #10#13, #13, #10], s);                                       
    SetLength(OSILog.Log, L + Length(TSA));
    for i := 0 to High(TSA) do
      OSILog.Log[L + i] := '[' + TheDate(0) + ']: [' + TheTime + ']: ' + 'OSI: ' + TSA[i];
    if OSILog.AutoScreen then OSI_AutoSaveScreen;              
  except                                    
    WriteLn('OSI: AddToLog: Failed to Log some text...');
  end;  
end;
                   
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_WriteAndLog(s: string);
Contributors: LordJashin
Description: Uses WriteLn and adds to OSILog log's TStrArray the text using OSI_AddToLog
             puts 'OSI: ' in front of every line. 
Date Created: October 16th, 2012. By LordJashin.
Last Modified: October 21st, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_WriteAndLog(s: string);
var
  i: Integer;  
  TSA: TStrArray;
begin  
  if (s = '') then Exit;          
  try                   
    TSA := StrExplodeMulti([#13#10, #10#13, #13, #10], s); 
    for i := 0 to High(TSA) do
      WriteLn('OSI: ' + TSA[i]);
  except
    WriteLn('OSI: WriteAndLog: Failed to write some text...');      
  finally          
    OSI_AddToLog(s);  
  end;  
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_ClearLog;
Contributors: LordJashin
Description: Clears the OSILog's Log TStrArray that has all the writelns saved 
Date Created: October 13th, 2012. By LordJashin.
Last Modified: October 17th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_ClearLog;
begin
  SetLength(OSILog.Log, 0);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure OSI_WriteLog;
Contributors: LordJashin
Description: WriteLn's OSILog.Log for you 
Date Created: October 18th, 2012. By LordJashin.
Last Modified: October 20th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure OSI_WriteLog;
var
  i: Integer;
begin
  WriteLn('OSI: Writing the OSILog: ');
  for i := 0 to High(OSILog.Log) do
    WriteLn(OSILog.Log[i]);  
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OSI_SaveLog(Path: string): Boolean;
Contributors: LordJashin
Description: Will save the OSILog log to Path, uses try block 
Date Created: October 13th, 2012. By LordJashin.
Last Modified: October 17th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}
                
function OSI_SaveLog(Path: string): Boolean;
var
  i, F1: Integer;
begin
  Result := False;          
  if (Length(OSILog.Log) = 0) then Exit; 
  OSI_WriteAndLog('Saving Log to: ' + Path);
  try
    F1 := RewriteFile(Path, True);
    WriteFileString(F1, '{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=' + #13#10 +
                        '                             Official SCAR Include' + #13#10 + 
                        '                                      Log' + #13#10 + 
                        '                       Created On: ' + TheDate(0) + #13#10 +                      
                        '                               At: ' + TheTime + #13#10 + 
                        '=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}' + #13#10 +
                        ' ' + #13#10);
    for i := 0 to High(OSILog.Log) do
      WriteFileString(F1, OSILog.Log[i] + #13#10);                                 
    if (FileSize(F1) > 0) and (FileExists(Path)) then
      Result := True;
    CloseFile(F1);
  except
    OSI_WriteAndLog('Failed to Save Log to: ' + Path);
  end;                                                     
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OSI_AutoSaveLog: Boolean;
Contributors: LordJashin
Description: Do not use this unless you want OSILog saved before you
             Free OSI; and AutoLogging must be enabled.
             This is the function used with the AutoLogging,
             and OSI_SetupAutoLog procedure. Uses try block           
Date Created: October 17th, 2012. By LordJashin.
Last Modified: October 17th, 2012. By LordJashin. 
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OSI_AutoSaveLog: Boolean;
var
  T, Path1, Path2, P1, P2: string;
  i: Integer;
begin
  Result := False;
  if not OSILog.AutoLog then Exit; 
  try                                                                                         
    T := TheTime;
    while StrContains(':', T) do
      T := Replace(T, ':', '-');                               
    Path1 := OSILog.AutoLogFolderPath + OSILog.AutoLogNewFolder + '\[' + TheDate(0) + '] [' + T + '] ' + OSILog.AutoLogName;
    Path2 := OSILog.AutoLogFolderPath + '[' + TheDate(0) + '] [' + T + '] ' + OSILog.AutoLogName;
    P1 := Path1;
    P2 := Path2; 
    while FileExists(Path1 + '.' + OSILog.AutoLogFileType) do
      begin                               
        Inc(i);
        Path1 := P1 + ' - ' + IntToStr(i);               
      end;   
    i := 0;
    while FileExists(Path2 + '.' + OSILog.AutoLogFileType) do
      begin                               
        Inc(i);
        Path2 := P2 + ' - ' + IntToStr(i);               
      end;                                                                                    
    if (OSILog.AutoLogNewFolder <> '') then
      begin
        if ForceDirectories(OSILog.AutoLogFolderPath + OSILog.AutoLogNewFolder + '\') then
          if DirectoryExists(OSILog.AutoLogFolderPath + OSILog.AutoLogNewFolder + '\') then
            if OSI_SaveLog(Path1 + '.' + OSILog.AutoLogFileType) then
              Result := True;          
      end
    else
      if OSI_SaveLog(Path2 + '.' + OSILog.AutoLogFileType) then
        Result := True;
  finally
    if not Result then
      OSI_WriteAndLog('Failed to AutoLog, and save to: ' + OSILog.AutoLogFolderPath);    
  end;               
end;