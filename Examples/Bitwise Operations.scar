// Created by LordJashin. To Remind me how the bitwise operations work!
{
 - The Binary System is in values of 0 and 1 only
 - Each place over can be represented in decimal form by 
   (Value * 2^PlaceOver)
   So the value being either 0 or 1, multiplied by 2 raised to the power of
   the number of places over.
   
   So 0001. For that first 1, = (1 * 2^0)
   So in decimal form it would be 1 still. Remember the first number on the
   right is multiplied by 2^0
   
   For 10101 = (1 * 2^0) + (0 * 2^1) + (1 * 2^2) + (0 * 2^3) + (1 * 2^4)
              = 1         + 0         + 4         + 0         + 16
              = 21   
   Just to make sure, you should google a Binary to Decimal calculator
   and try it out!

   Bitwise Operations: shl, shr, or, xor, and
   
   Tutorial I learned from: http://villavu.com/forum/showthread.php?t=18514
}
program BitwiseOperations;
begin
  // shl shr
  WriteLn(5 shl 2);  // (5 * 2^2) or (5 * 4)   // Shift Bits Left
  WriteLn(20 shr 2); // (20 / 2^2) or (20 / 4) // Shift Bits Right   
  
  // and
  { Look at this logical 'and' table
    0 or 1 -> 0
    1 or 0 -> 0
    1 or 1 -> 1
    0 or 0 -> 0 }
  WriteLn(12 and 9); // (1100 and 1001) = 1000 = 8 // Combines Bits
  WriteLn(15 and 5); // (1111 and 101) = 101       // doesn't change
                     // So the numbers of bits doesn't change
  WriteLn(14 and 1); // Even number = 0
  WriteLn(13 and 1); // Odd numbers = 1
        
  // or
  { Look at this logical 'or' table
    0 or 1 -> 1
    1 or 0 -> 1
    1 or 1 -> 1
    0 or 0 -> 0 }
  WriteLn(12 or 2); // 1100 or 0010 = 1110 // Combines bits  
  
  // xor
  WriteLn(12 xor 9); // 1100 xor 1001 = 101 = 5
  WriteLn(15 xor 9); // 1111 xor 1000 = 111 = 7    
                     // if bit values equal then value stays the same
                     // otherwise they are inverted
                     // 1100 xor 1001
                     // 0101 // Starting from the rightmost 
                     // (1, 0) = 0*, (0, 0) = 1*, (1, 0) = 0*, (1, 1) = 1*
                     // = 0101 look at the astericks*                     
end.   
