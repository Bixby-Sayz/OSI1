program New;
var
  F: TForm;
  V: TVariantArray;

procedure MakeFormVisible;
begin
  F.Show;
end;

function SetFormProperties: Integer;
begin
  F.Top:= Random(100);
  F.Left:= Random(100);
  F.Caption:= 'Random name ' + IntToStr(Random(30000));
  F.Canvas.Ellipse(10, 10, 60, 60);
  //safely called functions can return values
  Result:= Random(10);
end;

procedure SafeSetFormProperties;
var
  V: TVariantArray;
  i: Integer;
begin
  setarraylength(V, 0);
  i:= ThreadSafeCall('SetFormProperties', V);
  Writeln(IntToStr(i));
end;

begin
  repeat
    F:= CreateForm; //CreateForm function is threadsafe itself
    
    //warning - bad coding style
    setarraylength(V, 0); //this way code is hard to read and understand
    ThreadSafeCall('MakeFormVisible', V);  //not good coding style
    
    SafeSetFormProperties;  //good coding style demands to put wrapper
                   //functions that call unsafe functions threadsafely.
                   
    Sleep(10);
    FreeForm(F);  //FreeForm is threadsafe as well
  until(False);
end.
