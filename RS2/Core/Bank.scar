{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                                  Bank routines
--------------------------------------------------------------------------------
 * function BankScreen: Boolean;
     By: Wanted
 * function PinScreen: Boolean;
     By: Wanted
 * function EnterBankPin(Pin: string): Boolean;
     By: Wanted
 * function CloseBank(CheckBS: Boolean): Boolean;
     By: Wanted
 * function DepositAllEx(CheckBS, Inv, Equip, Summon: Boolean): Boolean;
     By: Wanted
 * function DepositAll(CheckBS: Boolean): Boolean;
     By: Wanted
 * function DepositItemsEx(Slots: TIntegerArray; Exclude: Boolean; CheckBS: Boolean): Boolean;
     By: Wanted
 * function DepositItems(Slots: TIntegerArray; CheckBS: Boolean): Boolean;
     By: Wanted
 * function DepositAllExclude(Exclude: TIntegerArray; CheckBS: Boolean): Boolean;
     By: Wanted
 * function ToggleUseNotes(Use: Boolean): Boolean;
     By: Wanted
 * function ToggleSwapMode(Use: Boolean): Boolean;
     By: Wanted
 * function SearchBank(CheckBS: Boolean; SearchText: string): Boolean;
     By: Wanted
 * function BankShowEquipStats(CheckBS: Boolean): Boolean;
     By: Wanted
 * function FixBank(FixUp: Boolean): Boolean;
     By: Wanted
 * function GetBankSlotIndex(Row, Column: Integer): Integer;
     By: Wanted
 * function GetBankSlotBounds(Slot: Integer): TBox;
     By: Wanted
 * function GetBankTabBounds(Tab: Integer): TBox;
     By: Wanted
 * function CordsToBankSlot(P: TPoint): Integer;
     By: Wanted
 * function BankItemExists(Slot: Integer; CheckBS: Boolean): Boolean;
     By: Wanted
 * function MouseBankItem(Slot: Integer; TypeC: ClickActions; CheckBS: Boolean): Boolean;
     By: Wanted
 * function DragBankItem(FromSlot, ToSlot: Integer; CheckBS: Boolean): Boolean;
     By: Wanted
 * function GetCurrentBankTab: Integer;
     By: Wanted
 * function BankTabExists(Tab: Integer): Boolean;
     By: Wanted
 * function SetBankTab(Tab: Integer; CheckBS: Boolean): Boolean;
     By: Wanted
 * function WithdrawEx2(Options: TStringArray; B: TBox; CheckBS: Boolean): Boolean;
     By: Wanted
 * function WithdrawEx(Amount: Integer; B: TBox; CheckBS: Boolean): Boolean;
     By: Wanted
 * function WithdrawSlotEx(Options: TStringArray; Slot: Integer; CheckBS: Boolean): Boolean;
     By: Wanted
 * function Withdraw(Amount, Slot: Integer; CheckBS: Boolean): Boolean;
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function BankScreen: Boolean;
Contributors: Wanted
Description: Returns true if at the bank screen.
Date Created: October 30th, 2011. By Wanted. RS2 Build 671.
Last Modification: November 22nd, 2011. By Wanted. RS2 Build 682.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function BankScreen: Boolean;
var
  TPA: TPointArray;
  P: TPoint;
begin
  Result := False;
  FindColors(TPA, 4106994, 119, 25, 328, 47);
  if (Length(TPA) > 20) then
    Result := FindTextTPAInTPA('ank of', ScreenChars, TPA, P.X, P.Y);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function PinScreen: Boolean;
Contributors: Wanted
Description: Returns true if at the pin screen.
Date Created: November 8th, 2011. By Wanted. RS2 Build 676.
Last Modification: November 22nd, 2011. By Wanted. RS2 Build 682.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function PinScreen: Boolean;
var
  TPA: TPointArray;
  P: TPoint;
begin
  Result := False;
  FindColors(TPA, 2070783, 50, 57, 421, 79);
  if (Length(TPA) > 50) then
     Result := FindTextTPAInTPA('enter your', ScreenChars, TPA, P.X, P.Y);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function EnterBankPin(Pin: string): Boolean;
Contributors: Wanted
Description: Enters bank pin and returns true if succesfully entered pin and at bank screen.
Date Created: November 8th, 2011. By Wanted. RS2 Build 676.
Last Modification: November 22nd, 2011. By Wanted. RS2 Build 682.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function EnterBankPin(Pin: string): Boolean;
var
  I, II, C, T: Integer;
  TPA: TPointArray;
  TBA: TBoxArray;
  P: TPoint;
begin
  Result := False;
  if (Length(Pin) <> 4) then
    Exit;
  if (not (PinScreen)) then
    Exit;
  SetLength(TBA, 11);
  for I := 0 to 10 do
    TBA[I] := Box(37 + ((I mod 4) * 90), 107 + ((I div 4) * 72), 100 + ((I mod 4) * 90), 170 + ((I div 4) * 72));
  for I := 0 to 3 do
  begin
    FindColors(TPA, 2070783, 37, 107, 370, 314);
    if (Length(TPA) < 250) then
      Exit;
    if (not (FindTextTPAInTPA(Copy(Pin, I + 1, 1), ScreenChars, TPA, P.X, P.Y))) then
      GetMousePos(P.X, P.Y);
    for II := 0 to 10 do
      if (PointInBox(P, TBA[II])) then
        Break;
    if (II > 10) then
      Exit;
    C := CountColor(clWhite, 41, 79, 399, 105);
    T := GetSystemTime + RR(5000, 7000);
    MouseBox(TBA[II].X1, TBA[II].Y1, TBA[II].X2, TBA[II].Y2, ClickLeft);
    while ((CountColor(clWhite, 41, 79, 399, 105) = C) and (GetSystemTime < T)) do
      WaitRR(250, 400);
    WaitRR(250, 400);
  end;
  Result := WaitFunc(@BankScreen, True, 250, 400, 5000, 7000);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function CloseBank(CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Returns true if at the bank screen and then closes it if open.
Date Created: October 30th, 2011. By Wanted. RS2 Build 671.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function CloseBank(CheckBS: Boolean): Boolean;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit
    else
      Result := True;
  MouseBox(482, 28, 495, 41, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function DepositAllEx(CheckBS, Inv, Equip, Summon: Boolean): Boolean;
Contributors: Wanted
Description: Returns true if at the bank screen and then clicks deposit all.
Date Created: October 30th, 2011. By Wanted. RS2 Build 671.
Last Modification: December 1st, 2011. By Wanted. RS2 Build 687.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function DepositAllEx(CheckBS, Inv, Equip, Summon: Boolean): Boolean;
var
  TBoA: TBooleanArray;
  I: Integer;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit
    else
      Result := True;
  TBoA := [Inv, Equip, Summon];
  for I := 0 to 2 do
    if (TBoA[I]) then
      MouseBox(379 + (38 * I), 298, 413 + (38 * I), 318, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function DepositAll(CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Returns true if at the bank screen and then clicks deposit all.
Date Created: December 1st, 2011. By Wanted. RS2 Build 687.
Last Modification: December 1st, 2011. By Wanted. RS2 Build 687.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function DepositAll(CheckBS: Boolean): Boolean;
begin
  Result := DepositAllEx(CheckBS, True, False, False);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function DepositItemsEx(Slots: TIntegerArray; Exclude: Boolean; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Deposits all inventory items except for excluded slots, or the other
way around if Exclude is false. True if CheckBS is true and bankscreen is found.
Date Created: December 9th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 12th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function DepositItemsEx(Slots: TIntegerArray; Exclude: Boolean; CheckBS: Boolean): Boolean;
var
  I, C, T: Integer;
  B: Boolean;
  P: TPoint;
  S: string;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit
    else
      Result := True;
  if (Length(Slots) = 0) then
  begin
    Result := DepositAll(CheckBS);
    Exit;
  end;
  for I := 0 to 27 do
    if ((TIAContains(Slots, I)) xor (Exclude)) then
      if (InvItemExists(I)) then
      begin
        MouseItem(I, MoveTo);
        GetMousePos(P.X, P.Y);
        C := InvCount;
        T := GetSystemTime + RR(1000, 2000);
        S := '';
        while ((GetSystemTime < T) and (S = '')) do
        begin
          S := GetUpText;
          WaitRR(50, 80);
        end;
        B := False;
        if ((InRange(Pos('t-1', S), 1, 10)) or (InRange(Pos('1', S), 1, 10)) or (InRange(Pos('-', S), 1, 10))) then
        begin
          Mouse(P.X, P.Y, 0, 0, False);
          ChooseOptionMulti(['t-A', 'All']);
          B := True;
        end
        else
          Mouse(P.X, P.Y, 0, 0, True);
        T := GetSystemTime + RR(1500, 2500);
        while ((GetSystemTime < T) and (InvCount = C)) do
          WaitRR(200, 350);
        if (B) then
          WaitRR(400, 500);
      end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function DepositItems(Slots: TIntegerArray; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Deposits all inventory items in specified slots. True if CheckBS is
true and bankscreen is found.
Date Created: November 13th, 2011. By Wanted. RS2 Build 679.
Last Modification: December 9th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function DepositItems(Slots: TIntegerArray; CheckBS: Boolean): Boolean;
begin
  Result := DepositItemsEx(Slots, False, CheckBS);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function DepositAllExclude(Exclude: TIntegerArray; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Deposits all inventory items except for excluded slots. True if
CheckBS is true and bankscreen is found.
Date Created: November 13th, 2011. By Wanted. RS2 Build 679.
Last Modification: December 9th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function DepositAllExclude(Exclude: TIntegerArray; CheckBS: Boolean): Boolean;
begin
  Result := DepositItemsEx(Exclude, True, CheckBS);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ToggleUseNotes(Use: Boolean): Boolean;
Contributors: Wanted
Description: Enables or disables note usage. Returns true if toggle was needed.
Date Created: October 30th, 2011. By Wanted. RS2 Build 671.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ToggleUseNotes(Use: Boolean): Boolean;
begin
  Result := False;
  case GetColor(251, 301) of
    7967381: Result := not (Use);
    10862787: Result := Use;
  else
    Exit;
  end;
  if  (not (Result)) then
    Exit;
  MouseBox(244, 297, 275, 318, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ToggleSwapMode(Use: Boolean): Boolean;
Contributors: Wanted
Description: Enables or disables note usage. Returns true if toggle was needed.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ToggleSwapMode(Use: Boolean): Boolean;
begin
  Result := False;
  case GetColor(36, 304) of
    65536: Result := not (Use);
    4806757: Result := Use;
  else
    Exit;
  end;
  if  (not (Result)) then
    Exit;
  MouseBox(32, 296, 62, 320, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SearchBank(CheckBS: Boolean; SearchText: string): Boolean;
Contributors: Wanted
Description: Returns true if at bankscreen and CheckBS.
Searches for SearchText using the in bank search glass.
Date Created: October 30th, 2011. By Wanted. RS2 Build 671.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SearchBank(CheckBS: Boolean; SearchText: string): Boolean;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit
    else
      Result := True;
  MouseBox(70, 297, 100, 319, ClickLeft);
  WaitRR(250, 500);
  TypeSend(SearchText);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function BankShowEquipStats(CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Returns true if at the bank screen if CheckBS true, clicks equip stats.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function BankShowEquipStats(CheckBS: Boolean): Boolean;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit
    else
      Result := True;
  MouseBox(461, 48, 492, 79, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FixBank(FixUp: Boolean): Boolean;
Contributors: Wanted
Description: Scrolls bank all the way to top or bottom, true if not needed to do so.
Searches for SearchText using the in bank search glass.
Date Created: October 30th, 2011. By Wanted. RS2 Build 671.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FixBank(FixUp: Boolean): Boolean;
var
  TPA: TPointArray;
  B1, B2, B3: TBox;
begin
  Result := False;
  if (FixUp) then
    if (GetColor(489, 101) = 1250841) then
      Exit;
  if (not (FixUp)) then
    if (GetColor(489, 276) = 592137) then
      Exit;
  Result := True;
  if (not (FindColors(TPA, 1250841, 482, 101, 495, 276))) then
    Exit;
  B1 := TPABounds(TPA);
  if (not (FindColors(TPA, 592137, 482, 101, 495, 276))) then
    Exit;
  B2 := TPABounds(TPA);
  B3 := Box(482, B1.Y1, 495, B2.Y2);
  if (FixUp) then
    DragMouseBox(B3.X1, B3.Y1, B3.X2, B3.Y2, 478, 81, 502, 100, True)
  else
    DragMouseBox(B3.X1, B3.Y1, B3.X2, B3.Y2, 475, 279, 504, 300, True)
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetBankSlotIndex(Row, Column: Integer): Integer;
Contributors: Wanted
Description: Returns index of an bank slot based on row and column position.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetBankSlotIndex(Row, Column: Integer): Integer;
begin
  Result := ((((Row - 1) * 10) + Column) - 1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetBankSlotBounds(Slot: Integer): TBox;
Contributors: Wanted
Description: Returns the bounds of an item in the bank slot.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetBankSlotBounds(Slot: Integer): TBox;
begin
  Result := Box(38 + ((Slot mod 10) * 44), 92 + ((Slot div 10) * 44), 73 + ((Slot mod 10) * 44), 123 + ((Slot div 10) * 44));
  ConstrainBox(Result.X1, Result.Y1, Result.X2, Result.Y2, MBX1, MBY1, MBX2, MBY2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetBankTabBounds(Tab: Integer): TBox;
Contributors: Wanted
Description: Returns the bounds of a bank tab.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetBankTabBounds(Tab: Integer): TBox;
begin
  Result := Box(25 + (Tab * 48), 47, 72 + (Tab * 48), 84);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function CordsToBankSlot(P: TPoint): Integer;
Contributors: Wanted
Description: Returns the bank slot of a point.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function CordsToBankSlot(P: TPoint): Integer;
var
  I: Integer;
  B: TBox;
begin
  Result := 0;
  for I := 0 to 27 do
  begin
    B := GetBankSlotBounds(I);
    if (PointInBox(P, B)) then
    begin
      Result := I;
      Exit;
    end;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function BankItemExists(Slot: Integer; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Returns true if there's an item in the given bank slot.
Exits if not at bankscreen and CheckBS is True.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function BankItemExists(Slot: Integer; CheckBS: Boolean): Boolean;
var
  P: TPoint;
  B: TBox;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit
    else
      Result := True;
  FixBank(True);
  B := GetBankSlotBounds(Slot);
  Result := FindColor(P.X, P.Y, clObjectOutline, B.X1, B.Y1, B.X2, B.Y2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function MouseBankItem(Slot: Integer; TypeC: ClickActions; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Clicks on an item in bank. Exits if not at bankscreen and CheckBS is True.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function MouseBankItem(Slot: Integer; TypeC: ClickActions; CheckBS: Boolean): Boolean;
var
  B: TBox;
begin
  Result := BankItemExists(Slot, CheckBS);
  if (not (Result)) then
    Exit;
  B := GetBankSlotBounds(Slot);
  MouseBox(B.X1 + 2, B.Y1 + 2, B.X2 - 2, B.Y2 - 2, TypeC);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function DragBankItem(FromSlot, ToSlot: Integer; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Drags an item from one bank slot to another.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function DragBankItem(FromSlot, ToSlot: Integer; CheckBS: Boolean): Boolean;
var
  B, B2: TBox;
begin
  Result := BankItemExists(FromSlot, CheckBS);
  if (not (Result)) then
    Exit;
  B := GetBankSlotBounds(FromSlot);
  B2 := GetBankSlotBounds(ToSlot);
  DragMouseBox(B.X1, B.Y1, B.X2, B.Y2, B2.X1, B2.Y1, B2.X2, B2.Y2, True);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetCurrentBankTab: Integer;
Contributors: Wanted
Description: Returns the current bank tab open.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetCurrentBankTab: Integer;
begin
  for Result := 0 to 8 do
    if (GetColor(37 + (48 * Result), 82) = 2896954) then
      Exit;
  Result := -1;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function BankTabExists(Tab: Integer): Boolean;
Contributors: Wanted
Description: Returns the bank tab exists yet.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function BankTabExists(Tab: Integer): Boolean;
var
  P: TPoint;
  B: TBox;
begin
  B := GetBankTabBounds(Tab);
  Result := FindColor(P.X, P.Y, clObjectOutline, B.X1, B.Y1, B.X2, B.Y2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SetBankTab(Tab: Integer; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Returns true if at the bank screen and CheckBS is true. Sets banktab.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SetBankTab(Tab: Integer; CheckBS: Boolean): Boolean;
var
  B: TBox;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit
    else
      Result := True;
  if (Tab = GetCurrentBankTab) then
    Exit;
  if (not (BankTabExists(Tab))) then
    Exit;
  B := GetBankTabBounds(Tab);
  MouseBox(B.X1 + 2, B.Y1 + 2, B.X2 - 2, B.Y2 - 2, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function WithdrawEx2(Options: TStringArray; B: TBox; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Withdraws by using MouseBox on B. Searches for your Options in ChooseOption
if it can't find it pulls the numbers out and uses them with Withdraw-X. If you
use ['-1 '] it will withdraw by left clicking one time to get one item out.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 12th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function WithdrawEx2(Options: TStringArray; B: TBox; CheckBS: Boolean): Boolean;
var
  I, H, C, CT, T: Integer;
  TBA: TBoxArray;
  WX: Boolean;
begin
  Result := False;
  if (CheckBS) then
    if (not (BankScreen)) then
      Exit;
  if (H < 0) then
    Exit;
  C := InvCount;
  if (Pos('-1 ', Options[0]) < 1) then
  begin
    MouseBox(B.X1, B.Y1, B.X2, B.Y2, ClickRight);
    WX := False;
    H := High(Options);
    for I := 0 to H do
      if  (Pos('-X', Options[I]) > 0) then
      begin
        WX := True;
        Break;
      end;
    if (CheckTBoA(OptionExistsMulti(Options, TBA)) < 1) then
      if (CheckTBoA(OptionExistsMulti(['w-X', '-X', 'X '], TBA)) < 1) then
        Exit
      else
        WX := True;
    MouseBox(TBA[0].X1, TBA[0].Y1, TBA[0].X2, TBA[0].Y2, ClickLeft);
    if (WX) then
    begin
      T := GetSystemTime + RR(4000, 5000);
      repeat
        CT := CountColor(clBlack, 210, 392, 309, 411);
        if (CT = 277) then
          Break;
      until (GetSystemTime > T);
      if (CT <> 277) then
        Exit;
      TypeSend(GetNumbers(Options[0]));
    end;
  end
  else
    MouseBox(B.X1, B.Y1, B.X2, B.Y2, ClickLeft);
  T := GetSystemTime + RR(2000, 3000);
  while ((GetSystemTime < T) and (InvCount = C)) do
    WaitRR(100, 200);
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function WithdrawEx(Amount: Integer; B: TBox; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Withdraws by using MouseBox on B. Converts your desired amount into
the appropriate options text, uses Withdraw-X if needed. Withdraw_All etc indexes.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function WithdrawEx(Amount: Integer; B: TBox; CheckBS: Boolean): Boolean;
var
  Options: TStringArray;
begin
  case Amount of
    Withdraw_1: Options := ['-1 ', 'draw-1', 'w-1'];
    Withdraw_5: Options := ['-5 ', 'draw-5', 'w-5'];
    Withdraw_10: Options := ['-10 ', 'draw-10', 'w-10'];
    Withdraw_All: Options := ['ll ', 'w-All'];
    Withdraw_All_But_One: Options := ['All b', 'l but', 'but o', 't one'];
  else
    Options := [IntToStr(Amount)];
  end;
  Result := WithdrawEx2(Options, B, CheckBS);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function WithdrawSlotEx(Options: TStringArray; Slot: Integer; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Withdraws by using MouseBox on slot. Searches for your Options in ChooseOption
if it can't find it pulls the numbers out and uses them with Withdraw-X. If you
use ['-1 '] it will withdraw by left clicking one time to get one item out.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function WithdrawSlotEx(Options: TStringArray; Slot: Integer; CheckBS: Boolean): Boolean;
begin
  Result := False;
  if (not (BankItemExists(Slot, CheckBS))) then
    Exit;
  Result := WithdrawEx2(Options, GetBankSlotBounds(Slot), False);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function Withdraw(Amount, Slot: Integer; CheckBS: Boolean): Boolean;
Contributors: Wanted
Description: Withdraws by using MouseBox on slot. Converts your desired amount into
the appropriate options text, uses Withdraw-X if needed. Withdraw_All etc indexes.
Date Created: December 11th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 11th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function Withdraw(Amount, Slot: Integer; CheckBS: Boolean): Boolean;
begin
  Result := False;
  if (not (BankItemExists(Slot, CheckBS))) then
    Exit;
  Result := WithdrawEx(Amount, GetBankSlotBounds(Slot), False);
end;

//OpenChest
//NPCBank
//OpenBooth
//DepositScreen
//OpenBankEx
//OpenBank
//OpenDepositBox
//WalkInBank