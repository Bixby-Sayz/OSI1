{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                                Game Tab Routines
--------------------------------------------------------------------------------
 * function CurrentLobbyTab: Integer;
     By: Wanted
 * function LobbyTab(Tab: Integer): Boolean;
     By: Wanted
 * function GetCurrentTab: Integer;
     By: Dynamite & Wanted.
 * function GetTabBounds(Tab: Integer): TBox;
     By: Wanted
 * function TabExists(Tab: Integer): Boolean;
     By: Wanted
 * function SetGameTab(Tab: Integer): Boolean;
     By: Wanted
 * function EquipmentToCoords(Slot: Integer): TPoint;
     By: Wanted & Home.
 * function GetEquipmentBounds(Slot: Integer): TBox;
     By: Home
 * function IsSlotEquipped(Slot: Integer): Boolean;
     By: Home & Wanted.
 * function ClickEquipedItem(Slot: Integer; TypeC: ClickActions): Boolean;
     By: Wanted & Home.
 * function GetCurrentMusic: string;
     By: Zyt3x
 * function IsRunning: Boolean;
     By: Wanted
 * function SetRun(Run: Boolean): Boolean;
     By: Zyt3x
 * function IsResting: Boolean;
     By: Wanted
 * function SetRest(Rest: Boolean): Boolean;
     By: Wanted
 * function IsXPBarOpen: Boolean;
     By: Wanted
 * function ToggleXPBar(Open: Boolean): Boolean;
     By: Wanted
 * function GetXPBarTotal: LongInt;
     By: Wanted
 * function ResetXPBar: Boolean;
     By: Wanted
 * function ConvertXPToLevel(xp: Integer): Integer;
     By Brak & Flyboy
 * function GetSkillBounds(Skill: Integer): TBox;
     By: Wanted
 * function GetSkillLevelEx(Skill: Integer; BottomNumber: Boolean): Integer;
     By: Wanted
 * function GetSkillLevel(Skill: Integer): Integer;
     By: Wanted
 * function GetMMLevelEx(Skill: Integer; var ColorState: string): Integer;
     By: Wanted
 * function GetMMLevel(Skill: Integer): Integer;
     By: Wanted
 * function HoverSkill(Skill: Integer): Boolean;
     By: Wanted
 * function GetSkillInfo(Skill: Integer; CurrentCheck, NextCheck, RemainderCheck: Boolean): TIntegerArray;
     By: Wanted
 * function GetXP(Skill: Integer): Integer;
     By: Wanted
 * procedure GetAllLevels;
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function CurrentLobbyTab: Integer;
Contributors: Wanted
Description: Returns what tab you have open at the lobby screen. 6 if failed.
Date Created: August 10th, 2011. By Wanted. RS2 Build 661.
Last Modification: August 14th, 2011. By Wanted. RS2 Build 662.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function CurrentLobbyTab: Integer;
begin
  for Result := 0 to 5 do
    if (SimilarColors(GetColor(109 + (Result * 100), 21), 8029324, 5)) then
      Break;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function LobbyTab(Tab: Integer): Boolean;
Contributors: Wanted
Description: Clicks on a lobby tab, if not already open.
Date Created: August 10th, 2011. By Wanted. RS2 Build 661.
Last Modification: August 10th, 2011. By Wanted. RS2 Build 661.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function LobbyTab(Tab: Integer): Boolean;
var
  I: Integer;
begin
  I := CurrentLobbyTab;
  Result := I = Tab;
  if ((Result) or (I = 6)) then
    Exit;
  MouseBox(67 + (Tab * 102), 26, 162 + (Tab * 102), 48, ClickLeft);
  WaitRR(250, 400);
  Result := CurrentLobbyTab = Tab;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetCurrentTab: Integer;
Contributors: Dynamite, Wanted.
Description: Returns current tab.
Date Created: August 31st, 2011. By Dynamite & Wanted. RS2 Build 662.
Last Modification: August 31st, 2011. By Wanted. RS2 Build 662.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetCurrentTab: Integer;
begin
  for Result := 0 to 15 do
    if (GetColor(535 + ((Result mod 8) * 30), 169 + ((Result div 8) * 298)) = 3775974) then
      Exit;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetTabBounds(Tab: Integer): TBox;
Contributors: Wanted
Description: Returns tab boundries.
Date Created: August 31st, 2011. By Wanted. RS2 Build 662.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetTabBounds(Tab: Integer): TBox;
var
  P: TPoint;
begin
  Result := Box(0, 0, 0, 0);
  if (Tab = Tab_Logout) then
  begin
    Result := Box(746, 0, 764, 19);
    Exit;
  end;
  P := Point(537 + ((Tab mod 8) * 30), 187 + ((Tab div 8) * 298));
  Result := Box(P.X - 12, P.Y - 14, P.X + 12, P.Y + 14);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function TabExists(Tab: Integer): Integer;
Contributors: Wanted, Dynamite.
Description: Returns True if the Tab exists.
Date Created: August 31st, 2011. By Wanted. RS2 Build 662.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function TabExists(Tab: Integer): Boolean;
var
  TB: TBox;
begin
  Result := False;
  if (Tab = Tab_Logout) then
  begin
    Result := (GetColor(746, 0) = 65536);
    Exit;
  end;
  TB := GetTabBounds(Tab);
  Result := (CountColorTolerance(5268337, TB.X1, TB.Y1, TB.X2, TB.Y2, 18) < 500);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SetGameTab(Tab: Integer): Integer;
Contributors: Wanted, Dynamite.
Description: Switches to a specific game tab.
Date Created: August 31st, 2011. By Wanted. RS2 Build 662.
Last Modification: August 31st, 2011. By Wanted. RS2 Build 662.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SetGameTab(Tab: Integer): Boolean;
var
  T: Integer;
  TB: TBox;
begin
  Result := (GetCurrentTab = Tab);
  if (Result) then
    Exit;
  if (not (TabExists(Tab))) then
    Exit;
  TB := GetTabBounds(Tab);
  MouseBox(TB.X1, TB.Y1, TB.X2, TB.Y2, ClickLeft);
  T := GetSystemTime + RR(2500, 3500);
  repeat
    if (GetCurrentTab = Tab) then
    begin
      Result := True;
      Exit;
    end;
    WaitRR(50, 150);
  until (T > GetSystemTime);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function EquipmentToCoords(Slot: Integer): TPoint;
Contributors: Wanted, Home.
Description: Returns the middle point of any Tab_Equip_ slot.
Date Created: September 1st, 2011. By Wanted & Home. RS2 Build 662.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function EquipmentToCoords(Slot: Integer): TPoint;
var
  TPA: TPointArray;
begin
  Result := Point(0, 0);
  TPA := [Point(601, 228), Point(642, 228), Point(601, 266), Point(641, 266),
          Point(684, 266), Point(586, 304), Point(643, 304), Point(697, 304),
          Point(641, 344), Point(586, 385), Point(642, 385), Point(698, 385)];
  if (InRange(Slot, 0, 11)) then
    Result := TPA[Slot];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetEquipmentBounds(Slot: Integer): TBox;
Contributors: Home, Wanted.
Description: Returns any Tab_Equip slot boundries.
Date Created: September 1st, 2011. By Home. RS2 Build 662.
Last Modification: November 8th, 2011. By Wanted. RS2 Build 676.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetEquipmentBounds(Slot: Integer): TBox;
var
  P: TPoint;
begin
  P := EquipmentToCoords(Slot);
  Result := IntToBox(P.X - 12, P.Y - 12, P.X + 12, P.Y + 12);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsSlotEquipped(Slot: Integer): Boolean;
Contributors: Home, Wanted.
Description: Returns true if a Tab_Equip_ slot is equipped with something.
Date Created: September 1st, 2011. By Home & Wanted. RS2 Build 662.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsSlotEquipped(Slot: Integer): Boolean;
var
  P: TPoint;
  TB: TBox;
begin
  Result := False;
  if (not (SetGameTab(Tab_Equip))) then
    Exit;
  TB := GetEquipmentBounds(Slot);
  Result := FindColor(P.X, P.Y, clObjectOutline, TB.X1, TB.Y1, TB.X2, TB.Y2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ClickEquipedItem(Slot: Integer; TypeC: ClickActions): Boolean;
Contributors: Wanted, Home.
Description: Clicks a Tab_Equip_ slot.
Date Created: September 1st, 2011. By Wanted & Home. RS2 Build 662.
Last Modification: October 31st, 2011. By Wanted. RS2 Build 672.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ClickEquipedItem(Slot: Integer; TypeC: ClickActions): Boolean;
var
  T: Integer;
  B : TBox;
begin
  B := GetEquipmentBounds(Slot);
  if (not (IsSlotEquipped(Slot))) then
    Exit;
  MouseBox(B.X1, B.Y1, B.X2, B.Y2, TypeC);
  T := GetSystemTime + RR(1500, 2500);
  Result := (TypeC = MoveTo);
  repeat
    case TypeC of
      ClickLeft: Result := (not (IsSlotEquipped(Slot)));
      ClickRight: Result := OptionBoxExists;
    end;
    if (Result) then
      Exit;
    WaitRR(50, 150);
  until (T > GetSystemTime);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetCurrentMusic: string;
Contributors: Zyt3x, Wanted.
Description: Returns the current music that's playing.
Date Created: September 3rd, 2011. By Zyt3x. RS2 Build 663.
Last Modification: November 22st, 2011. By Wanted. RS2 Build 682.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetCurrentMusic: string;
var
  TPA: TPointArray;
  B: TBox;
begin
  Result := '';
  if (not (SetGameTab(Tab_Music))) then
    Exit;
  if (FindColors(TPA, 39401, 547, 240, 736, 266)) then
  begin
    B := GetTPABounds(TPA);
    Result := Trim(GetTextAtEx(B.X1 - 1, 245, 0, ScreenChars, False, False, 0, 1, 39401, 50, False, tr_AllChars));
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsRunning: Boolean;
Contributors: Wanted
Description: Returns true if running.
Date Created: September 5th, 2011. By Wanted. RS2 Build 663.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsRunning: Boolean;
begin
  Result := False;
  if (not (SimilarColors(94120, GetColor(723, 120), 10))) then
    if (not (SimilarColors(6740460, GetColor(722, 104), 10))) then
      Exit;                     // ADD Need Low Resting Body Color... Possible?
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SetRun(Run: Boolean): Boolean;
Contributors: Zyt3x, Wanted.
Description: Sets run to desired state.
Date Created: September 4th, 2011. By Zyt3x. RS2 Build 663.
Last Modification: September 26th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SetRun(Run: Boolean): Boolean;
begin
  Result := ((IsRunning) xor (Run));
  if (Result) then
    MouseCircle(15, 724, 108, ClickLeft);
  Result := WaitFunc(@IsRunning, False, 50, 150, 1500, 2500);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsResting: Boolean;
Contributors: Wanted
Description: Returns true if resting.
Date Created: September 5th, 2011. By Wanted. RS2 Build 663.
Last Modification: September 5th, 2011. By Wanted. RS2 Build 663.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsResting: Boolean;
begin
  Result := SimilarColors(1854233, GetColor(719, 116), 10);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SetRest(Rest: Boolean): Boolean;
Contributors: Wanted, Zyt3x.
Description: Sets rest on.
Date Created: September 5th, 2011. By Wanted. RS2 Build 663.
Last Modification: October 31st, 2011. By Wanted. RS2 Build 672.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SetRest: Boolean;
begin
  Result := (IsResting);
  if (Result) then
    Exit;
  MouseCircle(15, 724, 108, ClickRight);
  Result := ChooseOption('est');
  WaitFunc(@IsResting, True, 50, 150, 1500, 2500);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsXPBarOpen: Boolean;
Contributors: Wanted, Anonymous.
Description: Returns true if the XP counter bar is open.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modification: October 28th, 2011. By Wanted. RS2 Build 671.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsXPBarOpen: Boolean;
begin
  Result := CountColor(clWhite, 342, 55, 510, 69) > 40;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ToggleXPBar(Open: Boolean): Boolean;
Contributors: Wanted, Anonymous.
Description: Opens or closes the XP Bar, true if had to toggle.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modification: October 28th, 2011. By Wanted. RS2 Build 671.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ToggleXPBar(Open: Boolean): Boolean;
begin
  Result := IsXPBarOpen <> Open;
  if (not (Result)) then
    Exit;
  MouseCircle(12, 534, 63, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetXPBarTotal: LongInt;
Contributors: Wanted, Anonymous.
Description: Returns the number from your XP Bar.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modification: October 28th, 2011. By Wanted. RS2 Build 671.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetXPBarTotal: LongInt;
var
  Previous: Boolean;
  TPA: TPointArray;
  B: TBox;
  P: TPoint;
begin
  Previous := IsXPBarOpen;
  if (ToggleXPBar(True)) then
    WaitFunc(@IsXPBarOpen, True, 10, 15, 1500, 1750);
  FindColorsTolerance(TPA, clWhite, 342, 55, 510, 69, 1);
  B := GetTPABounds(TPA);
  B := IntToBox(B.X1 - 2, B.Y1 - 2, B.X2 + 2, B.Y2 + 2);
  IsTextInAreaEx(B.X1, B.Y1, B.X2, B.Y2, P.X, P.Y, 'XP', 0, XPChars, False, False, 0, 1, clWhite);
  Result := StrToIntDef(GetNumbers(GetTextAtEx(P.X, P.Y, 1, XPChars, False, False, 0, 2, clWhite, 60, False, tr_AllChars)), 0);
  if (not (Previous)) then
    Wait(RandomRange(500, 1500));
  ToggleXPBar(Previous);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ResetXPBar: Boolean;
Contributors: Wanted, Anonymous.
Description: Resets the XP Bar.
Date Created: August 7th, 2011. By Wanted. RS2 Build 660.
Last Modification: October 28th, 2011. By Wanted. RS2 Build 671.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ResetXPBar: Boolean;
begin
  MouseCircle(12, 534, 63, ClickRight);
  Result := ChooseOptionMulti(['Res', 'ese', 'set']);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ConvertXPToLevel(xp: Integer): Integer;
Contributors: Brak, Flyboy.
Description: Returns skill level based on experience points.
Date Created: August 7th, 2011. By Brak & Flyboy. RS2 Build 660.
Last Modification: August 7th, 2011. By Brak & Flyboy. RS2 Build 660.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ConvertXPToLevel(xp: Integer): Integer;
var
  level, exp: Integer;
begin
  for level := 1 to 99 do
  begin
    exp := exp + Trunc(level + 300 * Pow(2, level / 7));
    if ((exp / 4) > xp) then
    begin
      Result := level;
      Exit;
    end;
  end;
  Result := 99;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillBounds(Skill: Integer): TBox;
Contributors: Wanted
Description: Returns the box of the skill on the stats tab.
Date Created: November 1st, 2011. By Wanted. RS2 Build 672.
Last Modification: November 1st, 2011. By Wanted. RS2 Build 672.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillBounds(Skill: Integer): TBox;
begin
  Result := Box(550 + ((Skill mod 3) * 62), 210 + ((Skill div 3) * 28), 609 + ((Skill mod 3) * 62), 235 + ((Skill div 3) * 28));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillLevelEx(Skill: Integer; BottomNumber: Boolean): Integer;
Contributors: Wanted
Description: Returns the number from the skill level in skill tabs.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillLevelEx(Skill: Integer; BottomNumber: Boolean): Integer;
var
  TPA: TPointArray;
  B, B2: TBox;
begin
  Result := 0;
  if (not (SetGameTab(Tab_Stats))) then
    Exit;
  B := GetSkillBounds(Skill);
  if (BottomNumber) then
    B2 := Box(B.X1 + 39, B.Y1 + 13, B.X1 + 58, B.Y1 + 24)
  else
    B2 := Box(B.X1 + 20, B.Y1 + 1, B.X1 + 44, B.Y1 + 14);
  FindColors(TPA, clYellow, B2.X1, B2.Y1, B2.X2, B2.Y2);
  B := GetTPABounds(TPA);
  Result := StrToIntDef(GetNumbers(GetTextAtEx(B.X1 - 1, B.Y1 - 1, 0, StatChars, False, False, 0, 2, clYellow, 10, False, tr_Digits)), -1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillLevel(Skill: Integer): Integer;
Contributors: Wanted
Description: Returns the number from the skill level in skill tabs.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 3rd, 2011. By Wanted. RS2 Build 674.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillLevel(Skill: Integer): Integer;
begin
  Result := GetSkillLevelEx(Skill, True);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetMMLevelEx(Skill: Integer; var ColorState: string): Integer;
Contributors: Wanted
Description: Returns the number from the skill level on the minimap.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 3rd, 2011. By Wanted. RS2 Build 674.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetMMLevelEx(Skill: Integer; var ColorState: string): Integer;
var
  ColorsDec: TIntegerArray;
  ColorsStr: TStringArray;
  TPA: TPointArray;
  I: Integer;
  B: TBox;
begin
  Result := -1;
  case Skill of
    Skill_HP: B := Box(721, 28, 749, 43);
    Skill_Prayer: B := Box(739, 67, 760, 83);
    Skill_Run: B := Box(735, 106, 759, 121);
    Skill_Summoning: B := Box(695, 128, 764, 162);
  else
    Exit;
  end;
  ColorsDec := [65280, 65535, 2070783, 255];
  ColorsStr  := ['green', 'yellow', 'orange', 'red'];
  for I := 0 to 3 do
    if (FindColors(TPA, ColorsDec[I], B.X1, B.Y1, B.X2, B.Y2)) then
      Break;
  if (I > 3) then
    Exit;
  B := GetTPABounds(TPA);
  Result := StrToIntDef(GetNumbers(GetTextAtEx(B.X1 - 1, B.Y1 - 1, 0, StatChars, False, False, 0, 2, ColorsDec[I], 10, False, tr_Digits)), -1);
  ColorState := ColorsStr[I];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetMMLevel(Skill: Integer): Integer;
Contributors: Wanted
Description: Returns the number from the skill level on the minimap.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 3rd, 2011. By Wanted. RS2 Build 674.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetMMLevel(Skill: Integer): Integer;
var
  S: string;
begin
  Result := GetMMLevelEx(Skill, S);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function HoverSkill(Skill: Integer): Boolean;
Contributors: Wanted
Description: Hovers a skill. Put a triple digit number for a random skill.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function HoverSkill(Skill: Integer): Boolean;
var
  B: TBox;
begin
  Result := False;
  if (not (SetGameTab(Tab_Stats))) then
    Exit;
  if (Skill > (Skill_Count - 1)) then
    B := GetSkillBounds(Random(Skill_Count))
  else
    B := GetSkillBounds(Skill);
  MouseBox(B.X1, B.Y1, B.X2, B.Y2, MoveTo);
  Result := True;
  WaitRR(1000, 2000);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetSkillInfo(Skill: Integer; CurrentCheck, NextCheck, RemainderCheck: Boolean): TIntegerArray;
Contributors: Wanted
Description: Returns the information by hovering the skill.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 22nd, 2011. By Wanted. RS2 Build 682.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetSkillInfo(Skill: Integer; CurrentCheck, NextCheck, RemainderCheck: Boolean): TIntegerArray;
var
  TBoA: TBooleanArray;
  TSA: TStringArray;
  TPA: TPointArray;
  I: Integer;
  P: TPoint;
  B: TBox;
begin
  Result := [-1, -1, -1];
  if (not (HoverSkill(Skill))) then
    Exit;
  if (not (WaitFindColorsTolerance(TPA, clSkillInfoBox, MIX1, MIY1, MIX2, MIY2, 0, 50, True, 100, 200, 1500, 2500))) then
    Exit;
  B := TPABounds(TPA);
  TSA := ['urrent', 'ext', 'ainder'];
  TBoA := [CurrentCheck, NextCheck, RemainderCheck];
  for I := 0 to 2 do
    if (TBoA[I]) then
      if (IsTextInAreaEx(B.X1, B.Y1, B.X2, B.Y2, P.X, P.Y, TSA[I], 0, SmallChars, False, False, 0, 2, 4305653)) then
        Result[I] := StrToIntDef(GetNumbers(GetTextAtEx(P.X, P.Y, 0, SmallChars, False, False, 0, 2, 4305653, 50, False, tr_AllChars)), -1);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetXP(Skill: Integer): Integer;
Contributors: Wanted
Description: Returns the information by hovering the skill.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 3rd, 2011. By Wanted. RS2 Build 674.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetXP(Skill: Integer): Integer;
var
  TIA: TIntegerArray;
begin
  TIA := GetSkillInfo(Skill, True, False, False);
  Result := TIA[0];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure GetAllLevels;
Contributors: Wanted
Description: Stores all levels from the stats tab to current player.
Date Created: November 3rd, 2011. By Wanted. RS2 Build 674.
Last Modification: November 3rd, 2011. By Wanted. RS2 Build 674.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure GetAllLevels;
var
  I, H: Integer;
begin
  H := Skill_Count - 1;
  for I := 0 to H do
    Players[CurrentPlayer].Level[I] := GetSkillLevel(I);
end;

//SetFightMode
//GetCombatLevel
//SetRetaliate
//GetCurrentWorld
//RestUntil
//AdjustSettings
//FixAllSettings
//DoEmotion