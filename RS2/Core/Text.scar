{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                                  Text Routines
--------------------------------------------------------------------------------
 * function GetUpText: string;
     By: Freddy1990
 * function IsUpText(Text: string): Boolean;
     By: Freddy1990
 * function IsUpTextMulti(Text: TStringArray): Boolean;
     By: Freddy1990
 * function OptionBoxExistsEx(var OptionBoxTPA: TPointArray): Boolean;
     By: Wanted
 * function OptionBoxExists: Boolean;
     By: Wanted
 * function OptionsExistsEx(Options: TStringArray; Colors: T2DIntegerArray; var InBox: TBoxArray): TBooleanArray;
     By: Wanted
 * function AllOptionColors: TIntegerArray;
     By: Wanted
 * function AllOptionColors2D(ResultLength: LongInt): T2DIntegerArray;
     By: Wanted
 * function OptionExistsMulti(Options: TStringArray): Boolean;
     By: Wanted
 * function OptionExists(Option: string): Boolean;
     By: Wanted
 * function ChooseOptionMultiEx(Options: TStringArray; Colors: T2DIntegerArray; TypeC: ClickActions): Boolean;
     By: Wanted
 * function ChooseOptionMulti(Options: TStringArray): Boolean;
     By: Wanted
 * function ChooseOption(Option: string): Boolean;
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetUpText: String;
Contributors: Freddy1990, Wanted.
Description: Returns text in upperleft corner.
Date Created: August 7th, 2011. By Freddy1990. RS2 Build 660.
Last Modified: August 8th, 2011. By Wanted. RS2 Build 660.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetUpText: string;
begin
  Result := rs_GetUpTextAt(8, 8);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsUpText(Text: string): Boolean;
Contributors: Freddy1990
Description: Returns true if uptext is found.
Date Created: August 7th, 2011. By Freddy1990. RS2 Build 660.
Last Modified: August 7th, 2011. By Freddy1990. RS2 Build 660.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsUpText(Text: string): Boolean;
begin
  Result := (Pos(Text, GetUpText) > 0);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsUpTextMulti(Text: TStringArray): Boolean;
Contributors: Freddy1990, Wanted.
Description: Checks for the occurance of any of the strings in the array.
Date Created: August 7th, 2011. By Freddy1990. RS2 Build 660.
Last Modified: August 8th, 2011. By Wanted. RS2 Build 660.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsUpTextMulti(Text: TStringArray): Boolean;
var
  TheText: string;
  I, H: Integer;
begin
  TheText := GetUpText;
  H := High(Text);
  for I := 0 to H do
    if (Pos(Text[I], TheText) > 0) then
    begin
      Result := True;
      Exit;
    end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionBoxExistsEx(var OptionBoxTPA: TPointArray): Boolean;
Contributors: Wanted
Description: Returns true if the box that contains the ChooseOptions is up.
OptionBoxTPA contains all the points within that match clOptionsBox.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 28th, 2011. By Wanted. RS2 Build 669.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionBoxExistsEx(var OptionBoxTPA: TPointArray): Boolean;
begin
  Result := WaitFindColorsTolerance(OptionBoxTPA, clOptionsBox, RSX1, RSY1, RSX2, RSY2, 0, 1500, True, 50, 150, 1500, 2500);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionBoxExists: Boolean;
Contributors: Wanted
Description: Simpler version of OptionBoxExistsEx.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionBoxExists: Boolean;
var
  TPA: TPointArray;
begin
  Result := OptionBoxExistsEx(TPA);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionsExistsEx(Options: TStringArray; Colors: T2DIntegerArray; var InBox: TBoxArray): TBooleanArray;
Contributors: Wanted
Description: Checks if options exist within the options box.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionsExistsEx(Options: TStringArray; Colors: T2DIntegerArray; var InBox: TBoxArray): TBooleanArray;
var
  OptionBoxTPA, TPA1, TPA2: TPointArray;
  I, II, H, HH: LongInt;
  P: TPoint;
  B: TBox;
begin
  if (not (OptionBoxExistsEx(OptionBoxTPA))) then
    Exit;
  B := GetTPABounds(OptionBoxTPA);
  H := High(Options);
  SetLength(Result, H + 1);
  SetLength(InBox, H + 1);
  for I := 0 to H do
  begin
    HH := High(Colors[I]);
    for II := 0 to HH do
    begin
      FindColors(TPA1, Colors[I][II], B.X1, B.Y1, B.X2, B.Y2);
      TPA2 := CombineTPA(TPA1, TPA2);
    end;
    if (not (FindTextTPAInTPA(Options[I], UpChars, TPA2, P.X, P.Y))) then
      Continue;
    Result[I] := True;
    HH := (Round((B.Y2 - B.Y1) / 16.25) - 1);
    for II := 0 to HH do
      if (InRange(P.Y, B.Y1 + 1 + (II * 16), B.Y1 + 17 + (II * 16))) then
      begin
        InBox[I] := Box(B.X1, B.Y1 + 1 + (II * 16), B.X2, B.Y1 + 17 + (II * 16));
        Break;
      end;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function AllOptionColors: TIntegerArray;
Contributors: Wanted
Description: Returns all the possible text colors for options except for player levels.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function AllOptionColors: TIntegerArray;
begin
  Result := [clNPCOption, clObjectOption, clPlayerOption, clActionOption, clItemOption];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function AllOptionColors2D(ResultLength: LongInt): T2DIntegerArray;
Contributors: Wanted
Description: Returns all the possible text colors for options except for player levels.
Except for unlike AllOptionColors returns it in a T2DIntegerArray style.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function AllOptionColors2D(ResultLength: LongInt): T2DIntegerArray;
var
  I, H: LongInt;
begin
  H := ResultLength - 1;
  SetLength(Result, ResultLength);
  for I := 0 to H do
    Result[I] :=  AllOptionColors;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionExistsMulti(Options: TStringArray): Boolean;
Contributors: Wanted
Description: Checks if options exist within the options box.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionExistsMulti(Options: TStringArray): Boolean;
var
  TBoA: TBooleanArray;
  TBA: TBoxArray;
begin
  TBoA := OptionsExistsEx(Options, AllOptionColors2D(1), TBA);
  Result := TBoA[0];
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionExists(Option: string): Boolean;
Contributors: Wanted
Description: Checks if option exists within the options box.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionExists(Option: string): Boolean;
begin
  Result := OptionExistsMulti([Option]);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ChooseOptionMultiEx(Options: TStringArray; Colors: T2DIntegerArray; TypeC: ClickActions): Boolean;
Contributors: Wanted
Description: Finds the first option in Option that exists and clicks it.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 28th, 2011. By Wanted. RS2 Build 669.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ChooseOptionMultiEx(Options: TStringArray; Colors: T2DIntegerArray; TypeC: ClickActions): Boolean;
var
  TBoA: TBooleanArray;
  TPA: TPointArray;
  TBA: TBoxArray;
  I, H: LongInt;
  P: TPoint;
  B: TBox;
begin
  TBoA := OptionsExistsEx(Options, Colors, TBA);
  H := High(TBoA);
  for I := 0 to H do
    if (TBoA[I]) then
    begin
      MouseBox(TBA[I].X1, TBA[I].Y1, TBA[I].X2, TBA[I].Y2, TypeC);
      Result := True;
      Exit;
    end;
  FindColors(TPA, clOptionsBox, RSX1, RSY1, RSX2, RSY2);
  B := GetTPABounds(TPA);
  B := Box(B.X1 - 10, B.Y1 - 10, B.X2 + 10, B.Y2 + 10);
  TPA := TPAFromBox(Box(B.X1 - 35, B.Y1 - 35, B.X2 + 35, B.Y2 + 35));
  TPAFilterBoxes(TPA, [B]);
  P := TPA[Random(Length(TPA))];
  MMouse(P.X, P.Y, 0, 0);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ChooseOptionMulti(Options: TStringArray): Boolean;
Contributors: Wanted
Description: Finds the first option in Option that exists and clicks it.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ChooseOptionMulti(Options: TStringArray): Boolean;
begin
  Result := ChooseOptionMultiEx(Options, AllOptionColors2D(Length(Options)), ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ChooseOption(Option: string): Boolean;
Contributors: Wanted
Description: If Option exists clicks it.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ChooseOption(Option: string): Boolean;
begin
  Result := ChooseOptionMulti([Option]);
end;

//GetNPCChatText
//FindNPCChatText