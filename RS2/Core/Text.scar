{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                                  Text Routines
--------------------------------------------------------------------------------
 * function GetUpText: string;
 * function IsUpText(Text: string): Boolean;
 * function IsUpTextMulti(Text: TStrArray): Boolean;
 * function OptionBoxExistsEx(var OptionBox: TBox): Boolean;
 * function OptionBoxExists: Boolean;
 * function GetOptionsEx(var B: TBox): TStrArray;
 * function GetOptions: TStrArray;
 * function OptionExistsMulti(Options: TStrArray; var InBox: TBoxArray): TBoolArray;
 * function OptionExists(Option: string): Boolean;
 * function ChooseOptionMultiEx(Options: TStrArray; TypeC: ClickActions): Boolean;
 * function ChooseOptionMulti(Options: TStrArray): Boolean;
 * function ChooseOption(Option: string): Boolean;
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetUpText: String;
Contributors: Freddy, Wanted.
Description: Returns text in upperleft corner.
Date Created: August 7th, 2011. By Freddy. RS2 Build 660.
Last Modified: January 5th, 2012. By Wanted. RS2 Build 691.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetUpText: string;
begin
  try
    Result := rs_GetTextAt(UpChars, 8, 10);
  except
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsUpText(Text: string): Boolean;
Contributors: Freddy, Wanted.
Description: Returns true if uptext is found.
Date Created: August 7th, 2011. By Freddy & Wanted. RS2 Build 660.
Last Modified: December 31st, 2011. By Wanted. RS2 Build 690.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsUpText(Text: string): Boolean;
var
  T: LongInt;
begin
  Result := True;
  T := GetSystemTime + RR(1000, 2000);
  while (GetSystemTime < T) do
    if (StrInStr(Text, GetUpText)) then
      Exit
    else
      WaitRR(50, 80);
  Result := False;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsUpTextMulti(Text: TStrArray): Boolean;
Contributors: Freddy, Wanted.
Description: Checks for the occurance of any of the strings in the array.
Date Created: August 7th, 2011. By Freddy & Wanted. RS2 Build 660.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsUpTextMulti(Text: TStrArray): Boolean;
var
  I, H, T: Integer;
  TheText: string;
begin
  Result := False;
  T := GetSystemTime + RR(1000, 2000);
  repeat
    TheText := GetUpText;
    H := High(Text);
    for I := 0 to H do
      if (StrInStr(Text[I], TheText)) then
      begin
        Result := True;
        Exit;
      end;
    WaitRR(50, 80);
  until (GetSystemTime > T);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionBoxExistsEx(var OptionBox: TBox): Boolean;
Contributors: Wanted, Freddy
Description: Returns true if the box that contains the ChooseOptions is up.
OptionBoxTPA contains all the points within that match clOptionsBox.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionBoxExistsEx(var OptionBox: TBox): Boolean;
var
  TPA, TPA1, TPA2: TPointArray;
  ATPA: T2DPointArray;
  B: TBox;
begin
  Result := False;
  if (not (WaitFindColorTolEx(TPA1, clOptionsBox, RSX1, RSY1, RSX2, RSY2, 0, 80, True, 50, 150, 1500, 2500))) then
    Exit;
  ATPA := SplitTPA(TPA1, 3);
  if (Length(ATPA) < 1) then
    Exit;
  SortATPASize(ATPA, True);
  TPA1 := ATPA[0]
  B := TPABounds(TPA1);
  FindColorEx(TPA2, clOptionsBox2, RSX1, B.Y1, RSX2, RSY2);
  ATPA := SplitTPA(TPA2, 3);
  if (Length(ATPA) < 1) then
    Exit;
  SortATPASize(ATPA, True);
  TPA2 := ATPA[0]
  TPA := CombineTPA(TPA1, TPA2);
  OptionBox := TPABounds(TPA);
  ConstrainBox(OptionBox.X1, OptionBox.Y1, OptionBox.X2, OptionBox.Y2, B.X1, B.Y1, B.X2, RSY2 - 2);
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionBoxExists: Boolean;
Contributors: Wanted
Description: Simpler version of OptionBoxExistsEx.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: November 22nd, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionBoxExists: Boolean;
var
  TB: TBox;
begin
  Result := OptionBoxExistsEx(TB);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetOptionsEx(var B: TBox): TStrArray;
Contributors: Wanted, Freddy
Description: Returns options.
Date Created: December 1st, 2011. By Wanted. RS2 Build 687.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetOptionsEx(var B: TBox): TStrArray;
var
  H, I: Integer;
begin
  if (not (OptionBoxExistsEx(B))) then
    Exit;
  H := (Round((B.Y2 - B.Y1) / 16.25) - 1);
  SetLength(Result, H + 1);
  for I := 0 to H do
    Result[I] := rs_GetTextAt(OptionChars, B.X1, B.Y1 + 2 + (I * 16));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetOptions: TStrArray;
Contributors: Wanted, Freddy
Description: Returns options.
Date Created: December 1st, 2011. By Wanted. RS2 Build 687.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetOptions: TStrArray;
var
  B: TBox;
begin
  Result := GetOptionsEx(B);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionExistsMulti(Options: TStrArray; var InBox: TBoxArray): TBoolArray;
Contributors: Wanted
Description: Checks if options exist within the options box.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionExistsMulti(Options: TStrArray; var InBox: TBoxArray): TBoolArray;
var
  I, II, H, HH: LongInt;
  Lines: TStrArray;
  B: TBox;
begin
  Lines := GetOptionsEx(B);
  H := High(Lines);
  if ((H + 1) < 1) then
    Exit;
  HH := High(Options);
  SetLength(Result, HH + 1);
  SetLength(InBox, HH + 1);
  for I := 0 to H do
    for II := 0 to HH do
      if (not (Result[II])) then
        if (StrInStr(Options[II], Lines[I])) then
        begin
          Result[II] := True;
          InBox[II] := Box(B.X1 + 2, B.Y1 + 2 + (I * 16), B.X2 - 2, B.Y1 + 17 + (I * 16));
          Break;
        end;
  for I := 0 to HH do
    if (Result[I]) then
      Exit;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OptionExists(Option: string): Boolean;
Contributors: Wanted, Freddy
Description: Checks if option exists within the options box.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OptionExists(Option: string): Boolean;
var
  TBoA: TBoolArray;
  TBA: TBoxArray;
begin
  TBoA := OptionExistsMulti([Option], TBA);
  Result := (CheckTBoA(TBoA) > 0);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ChooseOptionMultiEx(Options: TStrArray; TypeC: ClickActions): Boolean;
Contributors: Wanted, Freddy
Description: Finds the first option in Option that exists and clicks it.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ChooseOptionMultiEx(Options: TStrArray; TypeC: ClickActions): Boolean;
var
  TBoA: TBoolArray;
  TPA: TPointArray;
  TBA: TBoxArray;
  I, H: LongInt;
  P: TPoint;
  B: TBox;
begin
  TBoA := OptionExistsMulti(Options, TBA);
  H := High(TBoA);
  for I := 0 to H do
    if (TBoA[I]) then
    begin
      MouseBox(TBA[I].X1, TBA[I].Y1, TBA[I].X2, TBA[I].Y2, TypeC);
      Result := True;
      Exit;
    end;
  OptionBoxExistsEx(B);
  if ((B.X1 - 30) < RSX1) then
  begin
    B := Box(B.X1, B.Y1, B.X2 + 20, B.Y2);
    TPA := TPAFromBox(Box(B.X1, B.Y1, B.X2 + 30, B.Y2));
  end
  else
  begin
    B := Box(B.X1 - 20, B.Y1, B.X2, B.Y2);
    TPA := TPAFromBox(Box(B.X1 - 30, B.Y1, B.X2, B.Y2));
  end;
  TPAFilterBoxes(TPA, [B]);
  if (Length(TPA) < 1) then
    Exit;
  P := TPA[Random(Length(TPA))];
  MMouse(P.X, P.Y, 0, 0);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ChooseOptionMulti(Options: TStrArray): Boolean;
Contributors: Wanted, Freddy
Description: Finds the first option in Option that exists and clicks it.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: July 20th, 2012. By Freddy. RS2 Build 725.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ChooseOptionMulti(Options: TStrArray): Boolean;
begin
  Result := ChooseOptionMultiEx(Options, ClickLeft);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function ChooseOption(Option: string): Boolean;
Contributors: Wanted
Description: If Option exists clicks it.
Date Created: October 20th, 2011. By Wanted. RS2 Build 668.
Last Modified: October 20th, 2011. By Wanted. RS2 Build 668.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function ChooseOption(Option: string): Boolean;
begin
  Result := ChooseOptionMulti([Option]);
end;

//GetNPCChatText
//FindNPCChatText