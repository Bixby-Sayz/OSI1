{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                              Extended Map Routines
--------------------------------------------------------------------------------
 * function FindMMDotsExOverlap(ColorDiffs: TIntegerArray): T2DPointArray;
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindMMDotsExOverlap(ColorDiffs: TIntegerArray): T2DPointArray;
Contributors: Wanted
Description: Finds all MMDots you specify i.e. cldWhiteDot etc. see Global.scar
This one uses overlapping checking, so it's twice as slow.
Date Created: December 8th, 2011. By Wanted. RS2 Build 688.
Last Modification: December 8th, 2011. By Wanted. RS2 Build 688.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindMMDotsExOverlap(ColorDiffs: TIntegerArray): T2DPointArray;
var
  I, II, H, HH, Map, DC, Wi, He, C, O: Integer;
  Offset: T2DPointArray;
  TPA: TPointArray;
  L: TIntegerArray;
  B: Boolean;
begin
  Result := [TPointArray([])];
  HH := High(ColorDiffs);
  SetLength(Result, HH + 1);
  SetLength(L, HH + 1);
  if (HH < 0 ) then
    Exit;
  Map := BitmapFromString(MMX2 - MMX1, MMY2 - MMY1, '');
  CopyClientToBitmap(Map, MMX1, MMY1, MMX2, MMY2);
  DC := GetTargetDC;
  SetTargetBitmap(Map);
  GetBitmapSize(Map, Wi, He);
  FindColors(TPA, 65536, 0, 0, Wi - 1, He -1);
  FilterPointsDist(TPA, 0, MMRDe, Wi / 2, He / 2);
  SetTargetDC(DC);
  H := High(TPA);
  if (H < 0) then
    Exit;
  Offset := [TPointArray([Point(-2, 0), Point(-1, 0)]), TPointArray([Point(0, -2), Point(0, -1)])];
  for I := 0 to H do
    for O := 0 to 1 do
    begin
      C := (FastGetPixel(Map, TPA[I].X + Offset[O][0].X, TPA[I].Y + Offset[O][0].Y) - FastGetPixel(Map, TPA[I].X + Offset[O][1].X, TPA[I].Y + Offset[O][1].Y));
      B := False;
      for II := 0 to HH do
        if (C = ColorDiffs[II]) then
        begin
          B := True;
          Inc(L[II]);
          SetLength(Result[II], L[II]);
          Result[II][L[II] - 1] := Point(TPA[I].X + MMX1 - 2, TPA[I].Y + MMY1 - 2);
          Break;
        end;
      if (B) then
        Break;
    end;
end;
