{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                             SMART Debugging Routines
--------------------------------------------------------------------------------
 * procedure SmartDebugBitmap(BMP, X, Y: Integer);
     By: Wanted
 * procedure SmartClearDebugCanvas;
     By: Wanted
 * procedure SmartDebugText(Text: string; Chars, Color, X, Y: Integer);
     By: Wanted
 * procedure SmartDebugATPABoundsEx(ATPA: T2DPointArray; ShowTPAs, ShowATPABorder, ShowTPABorders, ShowTPAIndexes: Boolean);
     By: Wanted
 * procedure SmartDebugATPABounds(ATPA: T2DPointArray);
     By: Wanted
 * procedure SmartDebugATPA(ATPA: T2DPointArray);
     By: Wanted
 * procedure SmartDebugTPA(TPA: TPointArray);
     By: Wanted
 * procedure SmartDebugTBA(TBA: TBoxArray);
     By: Wanted
 * procedure SmartDebugTB(TB: TBox);
     By: Wanted
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugBitmap(BMP, X, Y: Integer);
Contributors: Wanted, Timer.
Description: Draws a bitmap on the smart debug canvas.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: February 19th 2012. By Wanted. RS2 Build 701.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugBitmap(BMP, X, Y: Integer);
var
  Canvas, SCanvas: TCanvas;
  BMP2, W, H: Integer;
begin
  BMP2 := BitmapFromString(RSPW, RSPH, '');
  SCanvas := GetBitmapCanvas(BMP2);
  SCanvas.Handle := SmartGetDebugDC;
  Canvas := GetBitmapCanvas(BMP);
  GetBitmapSize(BMP, W, H);
  SafeCopyCanvas(Canvas, SCanvas, 0, 0, W, H, X, Y, X + W, Y + H);
  FreeBitmap(BMP2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartClearDebugCanvas;
Contributors: Wanted, Timer.
Description: Clears the smart debug canvas.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartClearDebugCanvas;
var
  BMP: Integer;
begin
  BMP := BitmapFromString(RSPW, RSPH, '');
  SmartDebugBitmap(BMP, 0, 0);
  FreeBitmap(BMP);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugText(Text: string; Chars, Color, X, Y: Integer);
Contributors: Wanted
Description: Debugs a line of text to the smart debug canvas.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugText(Text: string; Chars, Color, X, Y: Integer);
var
  I, H, BMP: Integer;
  TPA: TPointArray;
begin
  BMP := BitmapFromString(RSPW, RSPH, '');
  TPA := LoadTextTPA(Text, Chars);
  H := High(TPA);
  for I := 0 to H do
    FastSetPixel(BMP, TPA[I].X, TPA[I].Y, Color);
  SmartDebugBitmap(BMP, X, Y);
  FreeBitmap(BMP);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugATPABoundsEx(ATPA: T2DPointArray; ShowTPAs, ShowATPABorder, ShowTPABorders, ShowTPAIndexes: Boolean);
Contributors: Wanted
Description: Debugs an ATPA to the smart debug canvas with tons of options.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugATPABoundsEx(ATPA: T2DPointArray; ShowTPAs, ShowATPABorder, ShowTPABorders, ShowTPAIndexes: Boolean);
var
  I, II, H, HH, BMP, Col: Integer;
  ATPA2: T2DPointArray;
  TPA: TPointArray;
  B: TBox;
begin
  BMP := BitmapFromString(RSPW, RSPH, '');
  H := High(ATPA);
  SetLength(ATPA2, H + 1);
  for I := 0 to H do
    ATPA2[I] := CopyTPA(ATPA[I]);
  if ((ShowTPAs) or (ShowTPABorders) or (ShowTPAIndexes)) then
  begin
    for I := 0 to H do
    begin
      Col := Random(clWhite + 1);
      HH := High(ATPA2[I]);
      if (ShowTPAs) then
        for II := 0 to HH do
          FastSetPixel(BMP, ATPA2[I][II].X, ATPA2[I][II].Y, Col);
      if ((ShowTPABorders) or (ShowTPAIndexes)) then
        Col := Random(clWhite + 1);
      if (ShowTPABorders) then
      begin
        TPA := TBOutlineToTPA(GetTPABounds(ATPA2[I]));
        HH := High(TPA);
          for II := 0 to HH do
            FastSetPixel(BMP, TPA[II].X, TPA[II].Y, Col);
      end;
      if (ShowTPAIndexes) then
      begin
        TPA := LoadTextTPA(IntToStr(I), StatChars);
        B := GetTPABounds(ATPA2[I]);
        OffsetTPA(TPA, B.X1 + 2, B.Y1 + 2);
        HH := High(TPA);
        for II := 0 to HH do
          try
            FastSetPixel(BMP, TPA[II].X, TPA[II].Y, Col);
          except
          end;
      end;
    end;
    if (ShowATPABorder) then
    begin
      TPA := TBOutlineToTPA(ATPABounds(ATPA2));
      H := High(TPA);
      for I := 0 to H do
        FastSetPixel(BMP, TPA[I].X, TPA[I].Y, clBlue);
    end;
  end;
  SmartDebugBitmap(BMP, 0, 0);
  FreeBitmap(BMP);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugATPABounds(ATPA: T2DPointArray);
Contributors: Wanted
Description: Debugs an ATPA to the smart debug canvas with all options enabled.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugATPABounds(ATPA: T2DPointArray);
begin
  SmartDebugATPABoundsEx(ATPA, True, True, True, True);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugATPA(ATPA: T2DPointArray);
Contributors: Wanted
Description: Debugs an ATPA to the smart debug canvas.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugATPA(ATPA: T2DPointArray);
begin
  SmartDebugATPABoundsEx(ATPA, True, True, False, False);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugTPA(TPA: TPointArray);
Contributors: Wanted
Description: Debugs a TPA to the smart debug canvas.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugTPA(TPA: TPointArray);
begin
  SmartDebugATPA([TPA]);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugTBA(TBA: TBoxArray);
Contributors: Wanted
Description: Debugs a TBoxArray to the smart debug canvas.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugTBA(TBA: TBoxArray);
var
  ATPA: T2DPointArray;
  I, H: LongInt;
begin
  H := High(TBA);
  SetLength(ATPA, H + 1);
  for I := 0 to H do
    ATPA[I] := [Point(TBA[I].X1, TBA[I].Y1), Point(TBA[I].X2, TBA[I].Y2)];
  SmartDebugATPABoundsEx(ATPA, False, False, True, True);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartDebugTB(TB: TBox);
Contributors: Wanted
Description: Debugs a TBox to the smart debug canvas.
Date Created: January 22nd, 2012. By Wanted. RS2 Build 699.
Last Modified: January 22nd, 2012. By Wanted. RS2 Build 699.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartDebugTB(TB: TBox);
begin
  SmartDebugTBA([TB]);
end;