{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
           S.M.A.R.T. Smart Minimizing Autoing Resource Thing Routines
--------------------------------------------------------------------------------
 * function IsKeyDown(C: Char): Boolean;
     By: BenLand100
 * procedure MoveMouse(X, Y: Integer);
     By: BenLand100
 * procedure GetMousePos(var X, Y: Integer);
     By: BenLand100
 * procedure WindMouse(xs, ys, xe, ye, gravity, wind, minWait, maxWait, maxStep, targetArea: extended);
     By: BenLand100
 * procedure MoveWindMouseEx(x, y, rx, ry: Integer);
     By: BenLand100
 * procedure MoveWindMouse(x, y, rx, ry: Integer);
     By: BenLand100
 * procedure HoldMouse(X, Y: Integer; Left: Boolean);
     By: BenLand100
 * procedure ReleaseMouse(X, Y: Integer; Left: Boolean);
     By: BenLand100
 * procedure HoldMouseMid(X, Y: Integer);
     By: Wanted
 * procedure ReleaseMouseMid(X, Y: Integer);
     By: Wanted
 * procedure KeyUp(Key: Byte);
     By: BenLand100
 * procedure KeyDown(Key: Byte);
     By: BenLand100
 * procedure SendKeys(S: string);
     By: BenLand100
 * function GetColor(X, Y: Integer): Integer;
     By: BenLand100
 * procedure SmartSetTarget;
     By: BenLand100
 * function FindWindow(Title: String): Boolean;
     By: BenLand100
 * procedure ActivateClient;
     By: BenLand100
 * function FindWindowBySize(Width, Height: Integer): Boolean;
     By: BenLand100
 * function SmartSetupEx(Server: Integer; Members, Signed, SuperDetail: Boolean): Boolean;
     By: BenLand100
 * function InitiateSMART: Boolean;
     By: Wanted
 * procedure SaveScreenShot(S: string);
     By: BenLand100
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                               Login.scar forwards
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function RSReady: Boolean; forward;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function IsKeyDown(C: Char): Boolean;
Contributors: BenLand100, Wanted.
Description: SMART override for KeyDown.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function IsKeyDown(C: Char): Boolean;
begin
  Result := SmartIsKeyDown(Ord(C));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure MoveMouse(X, Y: Integer);
Contributors: BenLand100, Wanted.
Description: SMART override for MoveMouse.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure MoveMouse(X, Y: Integer);
begin
  SmartMoveMouse(X, Y);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure GetMousePos(var X, Y: Integer);
Contributors: BenLand100, Wanted.
Description: SMART override for GetMousePos.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure GetMousePos(var X, Y: Integer);
begin
  SmartGetMousePos(X, Y);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure WindMouse(xs, ys, xe, ye, gravity, wind, minWait, maxWait, maxStep, targetArea: extended);
Contributors: BenLand100
Description: The infamous source code to WindMouse.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: October 30th, 2011. By Wanted. RS2 Build 671.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure WindMouse(xs, ys, xe, ye, gravity, wind, minWait, maxWait, maxStep, targetArea: extended);
var
  veloX, veloY, windX, windY, veloMag, dist, randomDist, lastDist, step: extended;
  lastX, lastY: integer;
  sqrt2, sqrt3, sqrt5: extended;
begin
  sqrt2:= sqrt(2);
  sqrt3:= sqrt(3);
  sqrt5:= sqrt(5);
  while hypot(xs - xe, ys - ye) > 1 do
  begin
    dist:= hypot(xs - xe, ys - ye);
    wind:= minE(wind, dist);
    if dist >= targetArea then
    begin
      windX:= windX / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
      windY:= windY / sqrt3 + (random(round(wind) * 2 + 1) - wind) / sqrt5;
    end else
    begin
      windX:= windX / sqrt2;
      windY:= windY / sqrt2;
      if (maxStep < 3) then
      begin
        maxStep:= random(3) + 3.0;
      end else
      begin
        maxStep:= maxStep / sqrt5;
      end;
    end;
    veloX:= veloX + windX;
    veloY:= veloY + windY;
    veloX:= veloX + gravity * (xe - xs) / dist;
    veloY:= veloY + gravity * (ye - ys) / dist;
    if hypot(veloX, veloY) > maxStep then
    begin
      randomDist:= maxStep / 2.0 + random(round(maxStep) div 2);
      veloMag:= sqrt(veloX * veloX + veloY * veloY);
      veloX:= (veloX / veloMag) * randomDist;
      veloY:= (veloY / veloMag) * randomDist;
    end;
    lastX:= Round(xs);
    lastY:= Round(ys);
    xs:= xs + veloX;
    ys:= ys + veloY;
    if (lastX <> Round(xs)) or (lastY <> Round(ys)) then
      MoveMouse(Round(xs), Round(ys));
    step:= hypot(xs - lastX, ys - lastY);
    wait(round((maxWait - minWait) * (step / maxStep) + minWait));
    lastdist:= dist;
  end;
  if (Round(xe) <> Round(xs)) or (Round(ye) <> Round(ys)) then
    MoveMouse(Round(xe), Round(ye));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure MoveWindMouseEx(x, y, rx, ry, MouseSpeed: Integer);
Contributors: BenLand100, Wanted.
Description: SMART override for MoveWindMouseEx.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: October 39th, 2011. By Wanted. RS2 Build 669.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure MoveWindMouseEx(x, y, rx, ry, MouseSpeed: Integer);
var
  cx, cy: integer;
  randSpeed: Extended;
begin
  GetMousePos(cx, cy);
  randSpeed:= (random(MouseSpeed) / 2.0 + MouseSpeed) / 10.0;
  if randSpeed = 0.0 then
    randSpeed := 0.1;
  X := x + random(rx);
  Y := y + random(ry);
  WindMouse(cx,cy,x,y,9.0,3.0,10.0/randSpeed,15.0/randSpeed,10.0*randSpeed,10.0*randSpeed);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure MoveWindMouse(x, y, rx, ry: Integer);
Contributors: BenLand100, Wanted.
Description: SMART override for MoveWindMouse.
Date Created: October 39th, 2011. By Wanted. RS2 Build 669.
Last Modification: October 39th, 2011. By Wanted. RS2 Build 669.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure MoveWindMouse(x, y, rx, ry: Integer);
begin
  MoveWindMouseEx(x, y, rx, ry, 15);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure HoldMouse(X, Y: Integer; Left: Boolean);
Contributors: BenLand100, Wanted.
Description: SMART override for HoldMouse.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure HoldMouse(X, Y: Integer; Left: Boolean);
begin
  SmartHoldMouse(X, Y, Left);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure ReleaseMouse(X, Y: Integer; Left: Boolean);
Contributors: BenLand100, Wanted.
Description: SMART override for ReleaseMouse.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure ReleaseMouse(X, Y: Integer; Left: Boolean);
begin
  SmartReleaseMouse(X, Y, Left);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure HoldMouseMid(X, Y: Integer);
Contributors: Wanted, BenLand100.
Description: SMART override for HoldMouseMid.
Date Created: October 31st, 2011. By Wanted. RS2 Build 672.
Last Modification: October 31st, 2011. By Wanted. RS2 Build 672.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure HoldMouseMid(X, Y: Integer);
begin
  SmartHoldMousePlus(X, Y, 2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure ReleaseMouseMid(X, Y: Integer);
Contributors: Wanted, BenLand100.
Description: SMART override for ReleaseMouseMid.
Date Created: October 31st, 2011. By Wanted. RS2 Build 672.
Last Modification: October 31st, 2011. By Wanted. RS2 Build 672.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure ReleaseMouseMid(X, Y: Integer);
begin
  SmartReleaseMousePlus(X, Y, 2);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure KeyUp(Key: Byte);
Contributors: BenLand100, Wanted.
Description: SMART override for KeyUp.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure KeyUp(Key: Byte);
begin
  if (Key = 13) then
    Key := 10;
  SmartReleaseKey(Key);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure KeyDown(Key: Byte);
Contributors: BenLand100, Wanted.
Description: SMART override for KeyDown.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure KeyDown(Key: Byte);
begin
  if (Key = 13) then
    Key := 10;
  SmartHoldKey(Key);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SendKeys(S: string);
Contributors: BenLand100, Wanted.
Description: SMART override for SendKeys.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SendKeys(S: string);
begin
  SmartSendKeys(S);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function GetColor(X, Y: Integer): Integer;
Contributors: BenLand100, Wanted.
Description: SMART override for GetColor.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function GetColor(X, Y: Integer): Integer;
begin
  Result := SmartGetColor(X, Y);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SmartSetTarget;
Contributors: BenLand100, Wanted.
Description: Makes SMART SCAR's canvas target.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: October 30th, 2011. By Wanted. RS2 Build 671.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SmartSetTarget;
var
  Smart_Bitmap: Integer;
begin
  Smart_Bitmap:= BitmapFromString(RSPW - 1, RSPH - 1, '');
  GetBitmapCanvas(Smart_Bitmap).Handle:= SmartGetDC;
  SetTargetBitmap(Smart_Bitmap);
  FreeBitmap(Smart_Bitmap);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindWindow(Title: String): Boolean;
Contributors: BenLand100, Wanted.
Description: SMART override for FindWindow.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindWindow(Title: String): Boolean;
begin
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure ActivateClient;
Contributors: BenLand100, Wanted.
Description: SMART override for ActivateClient.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure ActivateClient;
begin
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FindWindowBySize(Width, Height: Integer): Boolean;
Contributors: BenLand100, Wanted.
Description: SMART override for FindWindowBySize.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FindWindowBySize(Width, Height: Integer): Boolean;
begin
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function SmartSetupEx(Server: Integer; Members, Signed, SuperDetail: Boolean): Boolean;
Contributors: BenLand100, Wanted.
Description: Initiates SMART.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function SmartSetupEx(Server: Integer; SafeMode: Boolean): Boolean;
var
  Prefix, S, S2: string;
begin
  Result := False;
  if (SafeMode) then
  begin
    S := 's';
    S2 := 'safe mode enabled';
  end
  else
    S2 := 'safe mode disbaled';
  WriteLn('Initating SMART Runescape Server ' + IntToStr(Server) + ' with ' + S2 + '...');
  try
    Prefix := ReadINI('World' + IntToStr(Server), 'Prefix', WorldsINIPath);
    if (Prefix = '') then
    begin
      WriteLn('Invalid world number or corrupted world list. Please review your settings');
      WriteLn('Failed to load SMART!');
      Exit;
    end;
    SmartSetup('http://' + Prefix + '.runescape.com/', ',f5', RSPW - 1, RSPH - 1, S);
  except
    WriteLn('Failed to load SMART!');
  end;
  Result := True;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function InitiateSMART: Boolean;
Contributors: Wanted
Description: Initiates SMART more simply.
Date Created: September 18th, 2011. By Wanted. RS2 Build 666.
Last Modification: November 21st, 2011. By Wanted. RS2 Build 681.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function InitiateSMART: Boolean;
begin
  Result := False;
  if (SMART_Server = 0) then
    SMART_Server := 11;
  if (not (SmartSetupEx(SMART_Server, True))) then
    Exit;
  SetTargetDC(SmartGetDC);
  Result := WaitFunc(@RSReady, True, 100, 250, 90000, 120000);
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
procedure SaveScreenShot(S: string);
Contributors: BenLand100, Wanted.
Description: SMART override for SaveScreenShot.
Date Created: Unknown Date. By BenLand100. RS2 Build Unknown.
Last Modification: September 18th, 2011. By Wanted. RS2 Build 666.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

procedure SaveScreenShot(S: string);
var
  TempBMP: Integer;
  TempS: string;
begin;
  TempS := S;
  while FileExists(Temps) do
  begin;
    TempS := ExtractFilePath(s) + Copy(ExtractFileName(TempS), 1, LastPos('.', ExtractFileName(TempS)) - 1) + '2' + ExtractFileExt(S);
    Writeln(TempS);
  end;
  TempBMP := BitmapFromString(765, 503, '');
  try
    CopyClientToBitmap(TempBMP, 0, 0, 765, 503);
    SaveBitmap(TempBMP, Temps);
  except
  end;
  FreeBitmap(TempBMP);
end;