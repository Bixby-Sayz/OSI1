{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                             Smithing Skill Routines
--------------------------------------------------------------------------------
 * const Item database indexes
     By: Bixby Sayz
 * const Furnace options indexes
     By: Bixby Sayz
 * function LoadSmithingItem(Item: Integer; var Tolerance: Integer): Integer;
     By: Bixby Sayz
 * function FurnaceScreen: Boolean;
     By: Bixby Sayz
 * function OpenFurnace(Furnace: Integer; TypeC: ClickActions): Boolean;
     By Bixby Sayz
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{$DEFINE Smithing}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Item database indexes
Contributors: Bixby Sayz
Description: Indexes of all the smithing related database items.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modification: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const                            // Modified            By              Build #
{$IFNDEF Mining}
  dtmOre_Any = 0;                // November 13, 2011   Bixby Sayz      679
  dtmOre_Copper = 1;             // November 13, 2011   Bixby Sayz      679
  dtmOre_Tin = 2;                // November 13, 2011   Bixby Sayz      679
  dtmOre_Iron = 3;               // November 13, 2011   Bixby Sayz      679
  dtmOre_Silver = 4;             // November 13, 2011   Bixby Sayz      679
  dtmOre_Coal = 5;               // November 13, 2011   Bixby Sayz      679
  dtmOre_Gold = 6;               // November 13, 2011   Bixby Sayz      679
  dtmOre_Mithril = 7;            // November 13, 2011   Bixby Sayz      679
  dtmOre_Adamantite = 8;         // November 13, 2011   Bixby Sayz      679
  dtmOre_Runite = 9;             // November 13, 2011   Bixby Sayz      679
  dtmOre_Blurite = 10;           // November 13, 2011   Bixby Sayz      679
  dtmOre_Elemental = 11;         // November 13, 2011   Bixby Sayz      679
{$ENDIF}
  dtmBar = 12;                   // November 13, 2011   Bixby Sayz      679
  dtmBar_Bronze = 13;            // November 13, 2011   Bixby Sayz      679
  dtmBar_Iron = 14;              // November 13, 2011   Bixby Sayz      679
  dtmBar_Silver = 15;            // November 13, 2011   Bixby Sayz      679
  dtmBar_Steel = 16;             // November 13, 2011   Bixby Sayz      679
  dtmBar_Gold = 17;              // November 13, 2011   Bixby Sayz      679
  dtmBar_Mithril = 18;           // November 13, 2011   Bixby Sayz      679
  dtmBar_Adamant = 19;           // November 13, 2011   Bixby Sayz      679
  dtmBar_Rune = 20;              // November 13, 2011   Bixby Sayz      679
  dtmBar_Blurite = 21;           // November 13, 2011   Bixby Sayz      679
  dtmBar_Elemental = 22;         // November 13, 2011   Bixby Sayz      679
  dtm_Cannonball = 23;           // November 13, 2011   Bixby Sayz      679

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Furnace option indexes
Contributors: Bixby Sayz
Description: Indexes of all the supported furnaces.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modification: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const                            // Modified            By              Build #
  Furnace_Al_Kharid = 0;         // November 13, 2011   Bixby Sayz      679
  Furnace_Falador = 1;           // November 13, 2011   Bixby Sayz      679
  Furnace_Lumbridge = 2;         // November 13, 2011   Bixby Sayz      679
  Furnace_Wilderness = 3;        // November 13, 2011   Bixby Sayz      679

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function LoadSmithingItem(Item: Integer; var Tolerance: Integer): Integer;
Contributors: Wanted, Bixby Sayz
Description: Loads the Item into memory as result and returns recommended tolerance.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modification: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function LoadSmithingItem(Item: Integer; var Tolerance: Integer): Integer;
begin
  Result := -1;
  case Item of
    dtmOre: Result := DTMFromString('78DA63B4606060C8664001C78A6C19FE03694' +
                    '620FE0F048C0E986A181898C0242394C7E808240A09A8B10712C5' +
                    '04D498018902026A8C804416013506402213BF1A00312D0B18');
    dtmOre_Copper: Result := DTMFromString('78DA63FCC8C0C0E0C880028E15D9327001694' +
                           '620FE0F048C3F31D5303030814946288FF117907027A0E60790F0' +
                           '24A0E63D907023A0E635907020A0E62590B0C7AF06008AC70E0C');
    dtmOre_Tin: Result := DTMFromString('78DA63FCC8C0C0E0C8800272333218B880342' +
                        '310FF0702C69F986A181898C0242394C7F80B48B81350F3034878' +
                        '1250F31E48B81150F31A48381050F31248D8E357030057BB0DD4');
    dtmOre_Iron: Result := DTMFromString('78DA63FCC8C0C0E0C88002AC95A518B880342' +
                         '310FF0702C69F986A181898C0242394C7F80B48B81350F3034878' +
                         '1250F31E48B81150F31A48381050F31248D8E3570300A6050D0F');
    dtmOre_Silver: Result := DTMFromString('78DA63FCC8C0C0E0C88002FA274C63E002D28' +
                           'C40FC1F08187F62AA61606002938C501EE32F20E14E40CD0F20E1' +
                           '4940CD7B20E14640CD6B20E14040CD4B20618F5F0D00C3F70E4C');
    dtmOre_Coal: Result := DTMFromString('78DA637467606090656440062A2A320C5C401' +
                         'A24FA1F0818FD31D5303030814998286300905026A0C60F48A812' +
                         '50E30A249408A87104123204D4D8030969FC6A0075EB0760');
    dtmOre_Gold: Result := DTMFromString('78DA63FCC8C0C0E0C88002764F9562E002D28' +
                         'C40FC1F08187F62AA61606002938C501EE32F20E14E40CD0F20E1' +
                         '4940CD7B20E14640CD6B20E14040CD4B20618F5F0D0080F20E01');
    dtmOre_Mithril: Result := DTMFromString('78DA63FCC8C0C0E0C880022CADC218B880342' +
                            '310FF0702C69F986A181898C0242394C7F80B48B81350F3034878' +
                            '1250F31E48B81150F31A48381050F31248D8E3570300EEDE0D60');
    dtmOre_Adamantite: Result := DTMFromString('78DA63FCC8C0C0E0C88002EC3CEC18B880342' +
                               '310FF0702C69F986A181898C0242394C7F80B48B81350F3034878' +
                               '1250F31E48B81150F31A48381050F31248D8E3570300EA780D5B');
    dtmOre_Runite: Result := DTMFromString('78DA63FCC8C0C0E0C88002DC436318B880342' +
                           '310FF0702C69F986A181898C0242394C7F80BA491809A1F40C293' +
                           '809AF740C28D809AD740C281809A9740C21EBF1A00195E0D8F');
    dtmOre_Blurite: Result := DTMFromString('78DA637467606098CB8002F2F28F307001694' +
                            '620FE0F048CFE986A181898C0242394C7180024161350E3072496' +
                            '1250E30A24161150E30824E61050630F2466E3570300767F0C16');
    dtmOre_Elemental: Result := DTMFromString('78DA637467606098CB800242046B19B880342' +
                              '310FF0702467F4C350C0C4C609211CA630C00128B09A8F103124B' +
                              '09A87105128B08A87104127308A8B10712B3F1AB0100CA440B57');
    dtmBar: Result := DTMFromString('78DA63B4666060286440010136CA0CFF81342' +
                    '310FF07024627202387010D30814946288FD10C48941350A30724' +
                    '4A8950938E5F0D00B14D08FC');
    dtmBar_Bronze: Result := DTMFromString('78DA63FCC2C0C0E0CE8002026C94195881342' +
                           '310FF0702C6DF408613031A6002938C501EE37B20E14B40CD7320' +
                           'E14D841A5BFC6A0047250ACD');
    dtmBar_Iron: Result := DTMFromString('78DA63FCC2C0C0E0CE8002420203185881342' +
                         '310FF0702C6DF408613031A6002938C501EE37B20E14B40CD7320' +
                         'E14D841A5BFC6A0072760B13');
    dtmBar_Silver: Result := DTMFromString('78DA63FCC2C0C0E0CE8002962E5DCBC00AA41' +
                           '981F83F1030FE06329C18D00013986484F218DF03095F026A9E03' +
                           '096F22D4D8E257030012B70C15');
    dtmBar_Steel: Result := DTMFromString('78DA63FCC2C0C0E0CE80029A6B6B195881342' +
                          '310FF0702C6DF408613031A6002938C501EE37B20E14B40CD7320' +
                          'E14D841A5BFC6A00C6F00B9B');
    dtmBar_Gold: Result := DTMFromString('78DA63FCC2C0C0E0CE80026EAC96636005D28' +
                         'C40FC1F08187F03194E0C6880094C3242798CEF81842F0135CF81' +
                         '8437116A6CF1AB0100DE000BBF');
    dtmBar_Mithril: Result := DTMFromString('78DA63FCC2C0C0E0CE80021C1C13195881342' +
                            '310FF0702C6DF408613031A6002938C501EE37B20E14B40CD7320' +
                            'E14D841A5BFC6A0066840B00');
    dtmBar_Adamant: Result := DTMFromString('78DA63FCC2C0C0E0CE80023C433C195881342' +
                            '310FF0702C6DF408613031A6002938C501EE37B20E14B40CD7320' +
                            'E14D841A5BFC6A0069210B04');
    dtmBar_Rune: Result := DTMFromString('78DA63FCC2C0C0E0CE80020293B2185881342' +
                         '310FF0702C6DF408613031A6002938C501EE37B20E14B40CD7320' +
                         'E14D841A5BFC6A008B310B3B');
    dtmBar_Blurite: Result := DTMFromString('78DA63F4626060E860400175F58F185881342' +
                            '310FF0702C64020A399010D30814946288FD11548F41150630B24' +
                            '7A885053875F0D0022E109F0');
    dtmBar_Elemental: Result := DTMFromString('78DA63F4626060B8C5800292452633B002694' +
                              '620FE0F048C8140C6550634C0042619A13C465720F180801A5B20' +
                              '718F083517F0AB010043C00AB5');
    dtm_Cannonball: Result := DTMFromString('78DA637CC7C0C0E0C48002D45455195881342' +
                            '310FF0702C6DF40863D031A6002938C501EE31F4C7330D47C0112' +
                            'BE04D4BC05120104D43C05123EF8D50000C79E0BDF');
  else
    Result := 0;
  end;
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function FurnaceScreen: Boolean;
Contributors: Bixby Sayz
Description: Returns true if furnace (smelting) interface is open.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modification: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function FurnaceScreen: Boolean;
begin
  Result := TIAContains([11, 121], CountColorTolerance(4543066, 315, 350, 325, 360, 10));
end;

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function OpenFurnace(Furnace: Integer; TypeC: ClickActions): Boolean;
Contributors: Bixby Sayz, Wanted.
Description: Opens any F2P furnace.
Date Created: November 13th, 2011. By Bixby Sayz. RS2 Build 679.
Last Modification: November 15th, 2011. By Bixby Sayz. RS2 Build 687.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function OpenFurnace(Furnace: Integer; TypeC: ClickActions): Boolean;
var
  ATPA: T2DPointArray;
  TPA: TPointArray;
  Color: Integer;
  TB: TBox;
begin
  Result := FurnaceScreen;
  if (Result) then
    Exit;
  case (Furnace) of
    Furnace_Al_Kharid, Furnace_Falador: Color := 3947583;
    Furnace_Lumbridge:                  Color := 1581999;
    Furnace_Wilderness:                 Color := 3289653;
  else
    Exit;
  end;
  if (not (FindColorsTolerance(TPA, Color, MSX1, MSY1, MSX2, MSY2, 10))) then
    Exit;
  ATPA := SplitTPA(TPA, 10);
  SortATPASize(ATPA, True);
  TB := TPABounds(ATPA[High(ATPA)]);
  MouseBox(TB.X1, TB.Y1, TB.X2, TB.Y2, TypeC);
  Result := ((TypeC = MoveTo) or (TypeC = Nothing));
  if (Result) then
    Exit;
  if (TypeC = ClickRight) then
    if (not (ChooseOptionMulti(['melt', 'urnace']))) then
      Exit;
  Result := WaitFunc(@FurnaceScreen, True, 50, 100, 5000, 10000);
end;