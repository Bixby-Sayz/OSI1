{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                                   Runescape 2
                            Woodcutting Skill Routines
--------------------------------------------------------------------------------
 * const Item database indexes
 * function LoadWoodcuttingItem(Item: Integer; var Tolerance: Integer): Integer;
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{$DEFINE Woodcutting}

{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const Item database indexes
Contributors: Wanted, Bixby Sayz
Description: Indexes of all the woodcutting related database items.
Date Created: January 10th, 2012. By Wanted. RS2 Build 695.
Last Modified: August 13th, 2012. By Bixby Sayz. RS2 Build 729.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

const                            // Modified            By              Build #
  dtmHatchet = 0;                // January 10, 2012    Wanted          679
  dtmHatchet_Bronze = 1;         // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Iron = 2;           // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Steel = 3;          // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Black = 4;          // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Mithril = 5;        // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Adamant = 6;        // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Rune = 7;           // August 13, 2012     Bixby Sayz      729
  dtmHatchet_Dragon = 8;         // August 13, 2012     Bixby Sayz      729
  dtmAdze_Inferno = 9;           // August 13, 2012     Bixby Sayz      729
  dtmAxe_Dwarven_Army = 10;      // August 13, 2012     Bixby Sayz      729
  dtmLogs = 11;                  // August 13, 2012     Bixby Sayz      729
  dtmLogs_Regular = 12;          // August 13, 2012     Bixby Sayz      729
  dtmLogs_Oak = 13;              // August 13, 2012     Bixby Sayz      729
  dtmLogs_Willow = 14;           // August 13, 2012     Bixby Sayz      729
  dtmLogs_Maple = 15;            // August 13, 2012     Bixby Sayz      729
  dtmLogs_Yew = 16;              // August 13, 2012     Bixby Sayz      729
  dtmLogs_Magic = 17;            // August 13, 2012     Bixby Sayz      729
  dtmLogs_Teak = 18;             // August 13, 2012     Bixby Sayz      729
  dtmLogs_Mahogany = 19;         // August 13, 2012     Bixby Sayz      729
  dtmLogs_Arctic_Pine = 20;      // August 13, 2012     Bixby Sayz      729
  dtmLogs_Eucalyptus = 21;       // August 13, 2012     Bixby Sayz      729
  dtmLogs_Achey_Tree = 22;       // August 13, 2012     Bixby Sayz      729
  
{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function LoadWoodcuttingItem(Item: Integer; var Tolerance: Integer): Integer;
Contributors: Wanted, Bixby Sayz
Description: Loads the Item into memory as result and returns recommended tolerance.
Date Created: January 10th, 2012. By Wanted. RS2 Build 695.
Last Modified: August 13th, 2012. By Bixby Sayz. RS2 Build 729.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

function LoadWoodcuttingItem(Item: Integer; var Tolerance: Integer): Integer;
begin
  Result := -1;
  case Item of
    dtmHatchet: Result := DTMFromString('78DA63B461606098C18001FE033123880602' +
                        '463B20633ABA0A2630C908E5315A11A1C60848CC21A0460748AC' +
                        'C2AF0600969C092C');
    dtmHatchet_Bronze: Result := DTMFromString('78DA63B461606098C180022CB4241' +
                               '9B880342310FF0702463B20633A031A6002938C501EA3' +
                               '15116A8C80C41C026A7480C42AFC6A004DD408B2');
    dtmHatchet_Iron: Result := DTMFromString('78DA63B461606098C180026CADAC18B' +
                             '880342310FF0702463B20633A031A6002938C501EA31511' +
                             '6A8C80C41C026A7480C42AFC6A006F4208E8');
    dtmHatchet_Steel: Result := DTMFromString('78DA63B461606098C18002C2434218' +
                              'F881342310FF0702463B20633A031A6002938C501EA315' +
                              '116A8C80C41C026A7480C42AFC6A00A2C0093B');
    dtmHatchet_Black: Result := DTMFromString('78DA63B461606098C18002F8F8F818' +
                              'B880342310FF0702463B20633A031A6002938C501EA315' +
                              '116A8C80C41C026A7480C42AFC6A001B660861');
    dtmHatchet_Mithril: Result := DTMFromString('78DA63B461606098C18002F4F45C' +
                                '19B880342310FF0702463B20633A031A6002938C501E' +
                                'A315116A8C80C41C026A7480C42AFC6A00653808D8');
    dtmHatchet_Adamant: Result := DTMFromString('78DA63B461606098C180028CAC8C' +
                                '19B880342310FF0702463B20633A031A6002938C501E' +
                                'A315116A8C80C41C026A7480C42AFC6A00641008D6');
    dtmHatchet_Rune: Result := DTMFromString('78DA63B461606098C18002AC5CBD19B' +
                             '880342310FF0702463B20633A031A6002938C501EA31511' +
                             '6A8C80C41C026A7480C42AFC6A007EB50901');
    dtmHatchet_Dragon: Result := DTMFromString('78DA63B463606098C980024285781' +
                               '8B880342310FF0702467D206306031A6002938C501EA3' +
                               '25A639186A1C895063042416E3570300470108AB');
    dtmAdze_Inferno: Result := DTMFromString('78DA63B467606098CD80025295E519F' +
                             '881342310FF070246909A390C6880094C3242798C564062' +
                             '260135FA4062090135DA4062157E350075B508F5');
    dtmAxe_Dwarven_Army: Result := DTMFromString('78DA633462606098C78002F20D9' +
                                 '419B880342310FF0702464D4C350C0C4C609211CA63' +
                                 'D401120B08A8B100120B09A8B10712ABF0AB0100729' +
                                 'F0900');
    dtmLogs: Result := DTMFromString('78DA63D463606058CA8001FE033123880602467' +
                     'D206315BA0A2630C908E5316A0289E544A89941408D0B9058805F0D' +
                     '009581092F');
    dtmLogs_Regular: Result := DTMFromString('78DA63D463606058CA80021A332C18B' +
                             '880342310FF070246434C35B16E9A703520C0A80F245631' +
                             'A00126881C4C8D2690584E849A19F8D500001B620A21');
    dtmLogs_Oak: Result := DTMFromString('78DA63D463606058CA8002E6D4863370016' +
                         '94620FE0F048C86986A9A932CE16A4080511F48AC6240034C10' +
                         '39981A4D20B19C083533F0AB010073EB0AC2');
    dtmLogs_Willow: Result := DTMFromString('78DA63D463606058CA8002827CCD19B8' +
                            '80342310FF070246434C354E5622703520C0A80F245631A0' +
                            '0126881C4C8D2690584E849A19F8D50000CFB6099A');
    dtmLogs_Maple: Result := DTMFromString('78DA63D463606058CA8002AA425519B88' +
                           '0342310FF070246434C35B1B6BC703520C0A80F245631A001' +
                           '26881C4C8D2690584E849A19F8D50000EDC109CF');
    dtmLogs_Yew: Result := DTMFromString('78DA63D463606058CA8002F2220C18B8803' +
                         '42310FF070246434C359EA65C703520C0A80F245631A0012688' +
                         '1C4C8D2690584E849A19F8D50000DFF209B2');
    dtmLogs_Magic: Result := DTMFromString('78DA63D463606058CA8002F4E7F433700' +
                           '1694620FE0F048C86986A9AABC3E16A4080511F48AC624003' +
                           '4C1039981A4D20B19C083533F0AB01007FEB0AE3');
    dtmLogs_Teak: Result := DTMFromString('78DA63D463606058CA80025A53AC18B880' +
                          '342310FF070246434C35EB2727C2D58000A33E9058C5800698' +
                          '207230359A406239116A66E057030084090AFA');
    dtmLogs_Mahogany: Result := DTMFromString('78DA63D463606058CA800202F5B819' +
                              'B880342310FF070246434C356B2624C0D58000A33E9058' +
                              'C5800698207230359A406239116A66E0570300219E0A5A');
    dtmLogs_Arctic_Pine: Result := DTMFromString('78DA63D463606058CA8002B6CF4' +
                                 'A63E002D28C40FC1F08180D31D54CAB7082AB010146' +
                                 '7D20B18A010D3041E4606A3481C47222D4CCC0AF060' +
                                 '0B8200B3B');
    dtmLogs_Eucalyptus: Result := DTMFromString('78DA63D463606058CA800236AD9C' +
                                'C5C00FA41981F83F10301A62AA99D0D7055703028CFA' +
                                '406215031A6082C8C1D4680289E544A899815F0D000D' +
                                'D60BDB');
    dtmLogs_Achey_Tree: Result := DTMFromString('78DA633465606058C28002D2E2FD' +
                                '18B880342310FF0702460B206331AA9A980063B81A10' +
                                '60D406127319D00013440E59CD4A026A8C08AB010020' +
                                '150A3E');
  end;
end;