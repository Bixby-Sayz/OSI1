{=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                              Official SCAR Include
                            Inventory Function Testing
--------------------------------------------------------------------------------
 * procedure TestInventoryFunctions;           
   Last Modified: October 6th, 2012. By LordJashin. RS2 Build 735.        
 * Instructions:
                1. Set the constants
                2. Make sure your Inventory is full for a good test!!!
                3. Make sure your Inventory items are droppable
                4. Make sure your Inventory items aren't important
                   because they will be dropped during this test
                5. Run Test!
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=}

{$DEFINE RS2}
{$DEFINE SMART}
{$I ../../OSI.scar}

const
  RS2_Username = 'Test'; // Set these constants before running!
  RS2_Password = 'Test';
  RS2_Member = False;    // Use Member's world?
  SMART_World = 11;      // What world do you want to go to?

// Do not include this file. Run it!

procedure SetupPlayers;                                  
begin 
  SetLength(Players, 1);
  with Players[0] do
    begin
      Login := RS2_Username;
      Pass  := RS2_Password;
      Member := RS2_Member;  
      WorldInfo:= [RS2_Member, SMART_World];
      Active := True;
    end;  
  if not LoggedIn then                                   
    SetupOSI;
  Login;       
  wait(5000);
end;

procedure TestInventoryFunctions;
begin
  if GetInvSlotIndex(1, 1) = 0 then OSI_WriteAndLog('GetInvSlotIndex: Works!') else OSI_WriteAndLog('GetInvSlotIndex: Failed!');
  if GetItemBounds(0) <> Box(0, 0, 0, 0) then OSI_WriteAndLog('GetItemBounds: Works!') else OSI_WriteAndLog('GetItemBounds: Failed!');
  if CordsToItemSlot(Point(MII1, MII2)) = 0 then OSI_WriteAndLog('CordsToItemSlot: Works!') else OSI_WriteAndLog('CordsToItemSlot: Failed!');
  if InvItemExists(0, True) then OSI_WriteAndLog('InvItemExists: Works!') else OSI_WriteAndLog('InvItemExists: Doesn''t Exit or Failed!');
  OSI_WriteAndLog('InvCount: Result: ' + IntToStr(InvCount(True)));
  if InvFull(True) then OSI_WriteAndLog('InvFull: Full!') else OSI_WriteAndLog('InvFull: Not Full or Failed!');
  if InvEmpty(True) then OSI_WriteAndLog('InvEmpty: Empty!') else OSI_WriteAndLog('InvEmpty: Not Empty or Failed!');
  if MouseItem(0, ClickLeft, True) then OSI_WriteAndLog('MouseItem: Clicked Item(0)!') else OSI_WriteAndLog('MouseItem: Didn''t Click Item(0) or Failed!');
  if DragItem(1, 2, True) then OSI_WriteAndLog('DragItem: Dragged Item(1) to Item(2)!') else OSI_WriteAndLog('DragItem: Didn''t Drag Item(1) to Item(2) or Failed!');
  if Length(GetDropPattern(0)) > 0 then OSI_WriteAndLog('GetDropPattern: Works!') else OSI_WriteAndLog('GetDropPattern: Failed!');
  if DropItem(0, True) then OSI_WriteAndLog('DropItem: Dropped Item(0)!') else OSI_WriteAndLog('DropItem: Didn''t Drop Item(0) or Failed!');
  OSI_WriteAndLog('DropItemsPEx: Result (dropped): ' + IntToStr(DropItemsPEx([0,1,2], GetDropPattern(0), False, True)));
  OSI_WriteAndLog('DropItemsEx: Result (dropped): ' + IntToStr(DropItemsEx([0,1,2,3,4], False, True)));
  OSI_WriteAndLog('DropItems: Result (dropped): ' + IntToStr(DropItems([0,1,2,3,4,5], True)));
  OSI_WriteAndLog('DropAllExclude: Result (dropped): ' + IntToStr(DropAllExclude([5,6,7,8,9,10,11,12,13,14,15], True)));
  OSI_WriteAndLog('DropAll: Result (dropped): ' + IntToStr(DropAll(True)));
  // FindInvItemsDTM
  // CountInvItemsDTM
  // FindInvItemsBMP         
  // CountInvItemsBMP
end;

begin
  SetupPlayers;               
  ClearDebug;    
  MoveMouse(0, 0);
  TestInventoryFunctions;
end.